{"version":3,"sources":["serviceWorker.js","graphql/queries.js","util/route_util.js","graphql/mutations.js","components/Custom/tabs.js","components/Custom/demoLogin.js","components/Pages/Login.js","components/Layout/Header/Header.js","components/Custom/AccountList.js","components/Layout/Side/SidePanel.js","components/Layout/Side/Pending.js","components/Custom/FormFieldLabel.js","components/Layout/Main/FormComponents/BasicInfo.js","components/Custom/TimeInput.js","components/Layout/Main/FormComponents/Schedule.js","components/Layout/Main/FormComponents/Description.js","components/Layout/Main/FormComponents/Tickets.js","components/Layout/Main/EventForm.js","components/Pages/EventTool.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","IS_LOGGED_IN","gql","FETCH_USER_ID","FETCH_USER","FETCH_ACCOUNTS","FETCH_ACCOUNT","FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES","Queries","AuthRoute","Component","component","path","exact","routeType","rest","query","data","render","props","isLoggedIn","to","LOGIN_USER","REGISTER_USER","VERIFY_USER","PUSH_API_KEY","DELETE_API_KEY","Tab","label","onClick","className","active","activeTab","Box","margin","Text","weight","Tabs","children","useState","setActiveTab","onClickTabItem","tab","direction","map","child","key","Demo","email","setEmail","password","setPassword","login","inputRef","useRef","useEffect","i","string","int","setInterval","slice","length","current","click","clearInterval","Form","align","onSubmit","e","preventDefault","variables","FormField","info","TextInput","icon","Mail","value","onChange","target","placeholder","type","Button","ref","left","primary","style","color","height","pad","Mutations","Login","setError","useMutation","onCompleted","token","id","localStorage","setItem","history","push","onError","err","message","split","update","client","writeData","loggedIn","userId","updateCache","width","Heading","HeaderPanel","sidePanel","setSidePanel","pending","setPending","mode","setMode","useQuery","eventClient","useApolloClient","logout","removeItem","Header","background","light","dark","transition","level","userSelect","Tools","size","ResponsiveContext","Consumer","responsive","Menu","dropProps","top","items","CheckBox","checked","gap","toggle","Logout","cursor","AccountCard","apikey","setActive","hover","sethover","deleteAPIkey","readQuery","writeQuery","user","apikeys","deleteAPI","loading","fontWeight","account","border","justify","flex","truncate","name","padding","FormTrash","onMouseEnter","onMouseLeave","Accounts","List","primaryKey","SidePane","errorMessage","setErrorMessage","setApiKey","setTimeout","pushAPIkey","pushApi","max","overflow","bottom","right","Accordion","alignSelf","AccordionPanel","Pending","FormFieldLabel","required","BasicInfo","form","setForm","title","category","subcategory","categories","subcategories","filter","obj","parent","types","orgs","organizations","verticalAlign","maxLength","Select","option","options","TimeInput","MaskedInput","mask","Array","from","v","k","regexp","fixed","Schedule","today","Date","year","getFullYear","day","getDate","month","getMonth","bounds","toISOString","handleTime","time","start","end","help","RadioButton","series","event","Calendar","range","recurrence","occurs","times","onSelect","dates","date","Description","editor","handleEditorChange","getContent","setState","TextArea","plain","resize","apiKey","initialValue","init","menubar","plugins","toolbar","this","React","Tickets","defaultFormState","EventForm","MainBox","styled","EventTool","min","position","elevation","SidePanel","transform","zIndex","theme","deepMerge","grommet","defaultMode","global","font","family","App","Grommet","themeMode","tag","cache","InMemoryCache","dataIdFromObject","object","_id","errorLink","graphQLErrors","httpLink","createHttpLink","uri","headers","authorization","getItem","ApolloClient","link","ApolloLink","networkError","resolvers","mutate","mutation","verifyUser","Root","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0MAYMA,G,OAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,2sDC9FlD,OACbC,aAAcC,IAAF,KAKZC,cAAeD,IAAF,KAKbE,WAAYF,IAAF,KASVG,eAAgBH,IAAF,KAkBdI,cAAeJ,IAAF,KAkBbK,6CAA8CL,IAAF,MCtDtCD,EAAiBO,EAAjBP,aA0COQ,EAxCG,SAAC,GAAD,IACLC,EADK,EAChBC,UACAC,EAFgB,EAEhBA,KACAC,EAHgB,EAGhBA,MACAC,EAJgB,EAIhBA,UACGC,EALa,+DAOhB,kBAAC,IAAD,CAAOC,MAAOf,IACX,YAAe,IAAZgB,EAAW,EAAXA,KACF,MAAkB,SAAdH,EAEA,kBAAC,IAAD,CACEF,KAAMA,EACNC,MAAOA,EACPK,OAAQ,SAACC,GAAD,OACLF,EAAKG,WAGJ,kBAAC,IAAD,CAAUC,GAAG,MAFb,kBAACX,EAAD,iBAAeS,EAAWJ,OAShC,kBAAC,IAAD,iBACMA,EADN,CAEEG,OAAQ,SAACC,GAAD,OACNF,EAAKG,WACH,kBAACV,EAAD,iBAAeS,EAAWJ,IAE1B,kBAAC,IAAD,CAAUM,GAAG,mB,4pCCpCd,OACbC,WAAYpB,IAAF,KASVqB,cAAerB,IAAF,KASbsB,YAAatB,IAAF,KAQXuB,aAAcvB,IAAF,KASZwB,eAAgBxB,IAAF,M,4DClCVyB,EAAM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAChBC,EAAY,WACZC,GAAS,EAKb,OAP6C,EAAhBC,YAGXJ,IAChBE,GAAa,SACbC,GAAS,GAGT,kBAACE,EAAA,EAAD,CAAKC,OAAO,SAASJ,UAAWA,EAAWD,QAAS,kBAAMA,EAAQD,KAChE,kBAACO,EAAA,EAAD,CAAMC,OAAQL,EAAS,OAAS,UAAWH,KAmClCS,EA9BF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACKC,mBAASD,EAAS,GAAGnB,MAAMS,OADhC,mBACtBI,EADsB,KACXQ,EADW,KAEvBC,EAAiB,SAACC,GACtBF,EAAaE,IAEf,OACE,kBAACT,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAKU,UAAU,OACZL,EAASM,KAAI,SAACC,GAAW,IAChBjB,EAAUiB,EAAM1B,MAAhBS,MACR,OACE,kBAAC,EAAD,CACEI,UAAWA,EACXc,IAAKlB,EACLA,MAAOA,EACPC,QAASY,QAKjB,kBAACR,EAAA,EAAD,KACGK,EAASM,KAAI,SAACC,GACb,GAAIA,EAAM1B,MAAMS,QAAUI,EAC1B,OAAOa,EAAM1B,MAAMmB,e,SC0BdS,EA/DF,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOpD,EAAY,EAAZA,MACvDqD,EAAWC,iBAAO,MAoBxB,OAnBAC,qBAAU,WACR,IAAIC,EAAI,EACJC,EAAS,sBACPC,EAAMC,aAAY,WAUtB,OATIH,GAAK,GACPP,EAASQ,EAAOG,MAAM,EAAGJ,IAChBA,EAAIC,EAAOI,QAAUL,EAAI,GAClCL,EAAYM,EAAOG,MAAM,GAAIJ,EAAI,KAEjCH,EAASS,QAAQC,QACjBC,cAAcN,IAEhBF,IACO,WACLQ,cAAcN,MAEf,OACF,CAACT,EAAUE,IAGZ,kBAACc,EAAA,EAAD,CACEC,MAAM,MACNC,SAAU,SAACC,GACTA,EAAEC,iBACFjB,EAAM,CACJkB,UAAW,CACTtB,QACAE,gBAKN,kBAACqB,EAAA,EAAD,CAAWC,KAAK,gBAAgBN,MAAM,SACpC,kBAACO,EAAA,EAAD,CACEC,KAAM,kBAACC,EAAA,EAAD,MACNC,MAAO5B,EACP6B,SAAU,SAACT,GAAD,OAAOnB,EAASmB,EAAEU,OAAOF,QACnCG,YAAY,yBAGhB,kBAACR,EAAA,EAAD,CAAWC,KAAK,WAAWN,MAAM,SAC/B,kBAACO,EAAA,EAAD,CACEG,MAAO1B,EACP2B,SAAU,SAACT,GAAD,OAAOjB,EAAYiB,EAAEU,OAAOF,QACtCI,KAAK,WACLD,YAAY,cAGhB,kBAACE,EAAA,EAAD,CACEC,IAAK7B,EACLnB,OAAQ,CAAEiD,KAAM,QAChBH,KAAK,SACLI,SAAO,EACPxD,MAAM,WAER,kBAACK,EAAA,EAAD,CAAKoD,MAAO,CAAEC,MAAO,OAASpB,MAAM,SAASqB,OAAO,OAAOC,IAAI,SAC5DxF,KCpDDsB,EAA8BmE,EAA9BnE,WAAYC,EAAkBkE,EAAlBlE,cAqJLmE,EAnJD,SAACvE,GAAW,IAAD,EACGoB,mBAAS,IADZ,mBAChBS,EADgB,KACTC,EADS,OAESV,mBAAS,IAFlB,mBAEhBW,EAFgB,KAENC,EAFM,OAGGZ,mBAAS,IAHZ,mBAGhBvC,EAHgB,KAGT2F,EAHS,OAIPC,YAAYtE,EAAY,CACtCuE,YAAa,SAAC5E,GAAU,IAAD,EACCA,EAAKmC,MAAnB0C,EADa,EACbA,MAAOC,EADM,EACNA,GACfC,aAAaC,QAAQ,aAAcH,GACnCE,aAAaC,QAAQ,SAAUF,GAC/B5E,EAAM+E,QAAQC,KAAK,MAErBC,QAAS,SAACC,GACR,IAAMC,EAAUD,EAAIC,QAAQC,MAAM,KAAK,GACvCZ,EAASW,IAEXE,OAAQ,SAACC,EAAQxF,IAenB,SAAqBwF,EAArB,GAAwC,IAATxF,EAAQ,EAARA,KAC7BwF,EAAOC,UAAU,CACfzF,KAAM,CACJG,WAAYH,EAAKmC,MAAMuD,SACvBC,OAAQ3F,EAAKmC,MAAM2C,MAlBrBc,CAAYJ,EAAQxF,MAZjBmC,EAJgB,sBAoBJwC,YAAYrE,EAAe,CAC5CsE,YAAa,SAAC5E,GACZmC,EAAM,CAAEkB,UAAW,CAAEtB,QAAOE,eAE9BkD,QAAS,SAACC,GACR,IAAMC,EAAUD,EAAIC,QAAQC,MAAM,KAAK,GACvCZ,EAASW,EAAU,YANhBpH,EApBgB,oBAuCvB,OACE,kBAAC+C,EAAA,EAAD,CAAK6E,MAAM,OAAOvB,OAAO,OAAOrB,MAAM,UACpC,kBAAC6C,EAAA,EAAD,mBACA,kBAAC,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAKL,MAAM,QAAQsC,MAAM,SAASsB,IAAI,SACpC,kBAACvB,EAAA,EAAD,CACEC,MAAM,MACNC,SAAU,SAACC,GACTA,EAAEC,iBACFjB,EAAM,CACJkB,UAAW,CACTtB,QACAE,gBAKN,kBAACqB,EAAA,EAAD,CAAWC,KAAK,gBAAgBN,MAAM,SACpC,kBAACO,EAAA,EAAD,CACEC,KAAM,kBAACC,EAAA,EAAD,MACNC,MAAO5B,EACP6B,SAAU,SAACT,GAAD,OAAOnB,EAASmB,EAAEU,OAAOF,QACnCG,YAAY,yBAGhB,kBAACR,EAAA,EAAD,CAAWC,KAAK,WAAWN,MAAM,SAC/B,kBAACO,EAAA,EAAD,CACEG,MAAO1B,EACP2B,SAAU,SAACT,GAAD,OAAOjB,EAAYiB,EAAEU,OAAOF,QACtCI,KAAK,WACLD,YAAY,cAGhB,kBAACE,EAAA,EAAD,CACE/C,OAAQ,CAAEiD,KAAM,QAChBH,KAAK,SACLI,SAAO,EACPxD,MAAM,WAER,kBAACK,EAAA,EAAD,CACEoD,MAAO,CAAEC,MAAO,OAChBpB,MAAM,SACNqB,OAAO,OACPC,IAAI,SAEHxF,KAIP,kBAACiC,EAAA,EAAD,CAAKL,MAAM,YACT,kBAACqC,EAAA,EAAD,CACEC,MAAM,MACNC,SAAU,SAACC,GACTA,EAAEC,iBACFnF,EAAS,CACPoF,UAAW,CACTtB,QACAE,gBAKN,kBAACqB,EAAA,EAAD,CAAWC,KAAK,gBAAgBN,MAAM,SACpC,kBAACO,EAAA,EAAD,CACEG,MAAO5B,EACP6B,SAAU,SAACT,GAAD,OAAOnB,EAASmB,EAAEU,OAAOF,QACnCG,YAAY,yBAGhB,kBAACR,EAAA,EAAD,CAAWC,KAAK,WAAWN,MAAM,SAC/B,kBAACO,EAAA,EAAD,CACEG,MAAO1B,EACP2B,SAAU,SAACT,GAAD,OAAOjB,EAAYiB,EAAEU,OAAOF,QACtCI,KAAK,WACLD,YAAY,cAGhB,kBAACE,EAAA,EAAD,CACE/C,OAAQ,CAAEiD,KAAM,QAChBH,KAAK,SACLI,SAAO,EACPxD,MAAM,WAER,kBAACK,EAAA,EAAD,CACEoD,MAAO,CAAEC,MAAO,OAChBpB,MAAM,SACNqB,OAAO,OACPC,IAAI,SAEHxF,KAIP,kBAACiC,EAAA,EAAD,CAAKL,MAAM,OAAOsC,MAAM,SAASsB,IAAI,SACnC,kBAAC,EAAD,CACExF,MAAOA,EACPoD,MAAOA,EACPF,SAAUA,EACVC,YAAaA,EACbH,MAAOA,EACPC,SAAUA,Q,+DCxIdhD,EAAiBO,EAAjBP,aA6HO+G,GA3HK,SAAC,GAQd,IAPLC,EAOI,EAPJA,UACAC,EAMI,EANJA,aACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QAEI,uFACoBC,YAAStH,IAAzBgB,EADJ,EACIA,KAAMjB,EADV,EACUA,MACRwH,EAAcC,cACpB,GAAIzH,EAAO,OAAO,sCAAYA,EAAMsG,SACpC,IAAMoB,EAAS,SAACtD,GACdA,EAAEC,iBACF2B,aAAa2B,WAAW,cACxB3B,aAAa2B,WAAW,UACxBH,EAAYd,UAAU,CACpBzF,KAAM,CACJG,YAAY,EACZwF,OAAQ,SAKd,OACE,kBAACgB,EAAA,EAAD,CACErC,OAAO,MACPsC,WAAY,CAAEC,MAAO,UAAWC,KAAM,UACtC1C,MAAO,CAAE2C,WAAY,kBACrBlB,MAAM,QACNtB,IAAI,SAEJ,kBAACvD,EAAA,EAAD,CAAKU,UAAU,MAAMuB,MAAM,UACzB,kBAAC6C,EAAA,EAAD,CACE7E,OAAO,SACP+F,MAAM,IACN3C,MAAM,QACND,MAAO,CAAE6C,WAAY,SAJvB,cAQA,kBAACC,EAAA,EAAD,CAAO7C,MAAM,QAAQ8C,KAAK,WAE5B,kBAACC,EAAA,EAAkBC,SAAnB,MACG,SAACC,GAAD,MACgB,UAAfA,EACE,oCACE,kBAACtD,EAAA,EAAD,CAAQ/C,OAAO,OAAOkD,SAAO,EAACE,MAAM,WAAW1D,MAAM,WACrD,kBAAC4G,EAAA,EAAD,CACEC,UAAW,CAAEvE,MAAO,CAAEwE,IAAK,SAAUvD,KAAM,SAC3CT,KAAM,kBAAC,IAAD,MACNc,IAAI,QACJmD,MACE1H,EAAKG,WACD,CACE,CACEQ,MAAO,kBAACgH,EAAA,EAAD,CAAUC,QAASxB,EAAMzF,MAAM,cACtCC,QAAS,kBAAMyF,GAASD,KAE1B,CACEzF,MACE,kBAACgH,EAAA,EAAD,CAAUC,QAAS5B,EAAWrF,MAAM,YAEtCC,QAAS,kBAAMqF,GAAcD,KAE/B,CACErF,MAAO,SACPC,QAAS,SAACuC,GAAD,OAAOsD,EAAOtD,MAG3B,MAKV,kBAACnC,EAAA,EAAD,CAAKU,UAAU,MAAMmG,IAAI,SACvB,kBAACF,EAAA,EAAD,CACEhH,MAAM,YACNiH,QAASxB,EACTxC,SAAU,kBAAMyC,GAASD,IACzB0B,QAAM,IAEP9H,EAAKG,WACJ,oCACE,kBAACwH,EAAA,EAAD,CACEhH,MAAM,UACNiH,QAAS5B,EACTpF,QAAS,WACPuF,GAAW,GACXF,GAAcD,IAEhB8B,QAAM,IAER,kBAACH,EAAA,EAAD,CACEhH,MAAM,UACNiH,QAAS1B,EACTtF,QAAS,WACPuF,GAAYD,GACZD,GAAa,IAEf6B,QAAM,IAER,kBAAC9G,EAAA,EAAD,CAAK6G,IAAI,QAAQ5G,OAAO,SAASS,UAAU,OACzC,kBAACsC,EAAA,EAAD,CAAQG,SAAO,EAACE,MAAM,WAAW1D,MAAM,WACvC,kBAACqD,EAAA,EAAD,CACEP,KAAM,kBAACsE,EAAA,EAAD,MACN1D,MAAO,CAAEwC,MAAO,QAASC,KAAM,SAC/B3C,SAAO,EACPxD,MAAM,SACNC,QAAS6F,EACTrC,MAAO,CAAE4D,OAAQ,eAIrB,W,6BC5HVvH,GAAmB+D,EAAnB/D,eACApB,GAA8BE,EAA9BF,cAAeF,GAAeI,EAAfJ,WACvB,SAAS8I,GAAT,GAAiE,IAA1CC,EAAyC,EAAzCA,OAAQpD,EAAiC,EAAjCA,GAAIa,EAA6B,EAA7BA,OAAQ7E,EAAqB,EAArBA,OAAQqH,EAAa,EAAbA,UAAa,EACpC7G,oBAAS,GAD2B,mBACvD8G,EADuD,KAChDC,EADgD,OAE1C1D,YAAYlE,GAAgB,CAC9C0E,QAAS,SAACC,GACR,IAAMC,EAAUD,EAAIC,QAAQC,MAAM,KAAK,GACvC5G,QAAQC,IAAI0G,IAEdE,OAL8C,SAKvCC,EALuC,GAKF,IAAnB8C,EAAkB,EAA1BtI,KAAQsI,aACnBtI,EAAOwF,EAAO+C,UAAU,CAC1BxI,MAAOZ,GACPkE,UAAW,CAAEsC,YAEfH,EAAOgD,WAAW,CAChBzI,MAAOZ,GACPkE,UAAW,CAAEsC,UACb3F,KAAM,CACJyI,KAAK,gBACAzI,EAAKyI,KADN,CAEFC,QAASJ,EAAaI,gBAhBzBC,EAFuD,sBAwB7BrC,YAASjH,GAAe,CACvDgE,UAAW,CACT6E,YAFIU,EAxBsD,EAwBtDA,QAAS5I,EAxB6C,EAwB7CA,KAAMjB,EAxBuC,EAwBvCA,MAKvB,GAAIA,EACF,OACE,wBAAIqF,MAAO,CAAEC,MAAO,MAAOwE,WAAY,WACpC9J,EAAMsG,QAAQC,MAAM,KAAK,IAGhC,GAAIsD,EAAS,OAAO,KAnC0C,IAoCxDE,EAAY9I,EAAZ8I,QACN,OACE,kBAAC9H,EAAA,EAAD,CACEC,OAAO,OACPY,IAAKiD,EACLpD,UAAU,MACVqH,OACEjE,IAAOhE,GACH,CACEuD,MAAO,QACP8C,KAAM,SAId6B,QAAQ,UACRpC,WAAY,CAAEC,MAAO,UAAWC,KAAM,UACtCmC,KAAK,OACL7E,MAAO,CAAE4D,OAAQ,WACjBpH,QAAS,kBAAMuH,EAAUrD,KAEzB,kBAAC9D,EAAA,EAAD,CAAKuD,IAAI,SAAStD,OAAO,SAASS,UAAU,UAC1C,kBAACR,EAAA,EAAD,CAAMiG,KAAK,SAAS+B,UAAQ,GAC1B,kBAAChI,EAAA,EAAD,CAAMiG,KAAK,SAAShG,OAAO,QAA3B,iBAEQ,IACP2H,EAAQK,MAEX,kBAACjI,EAAA,EAAD,CAAMiG,KAAK,SAAS+B,UAAQ,GAC1B,kBAAChI,EAAA,EAAD,CAAMiG,KAAK,SAAShG,OAAO,QAA3B,UAEQ,IACP2H,EAAQ/G,OAEX,kBAACb,EAAA,EAAD,CAAMiG,KAAK,SAAS+B,UAAQ,GAC1B,kBAAChI,EAAA,EAAD,CAAMiG,KAAK,SAAShG,OAAO,QAA3B,YAEQ,IACP2H,EAAQZ,SAGb,yBAAK9D,MAAO,CAAEyB,MAAO,OAAQuD,QAAS,QACpC,kBAACC,GAAA,EAAD,CACEC,aAAc,kBAAMjB,GAAS,IAC7BkB,aAAc,kBAAMlB,GAAS,IAC7BzH,QAAS,SAACuC,GACRA,EAAEC,iBACFuF,EAAU,CACRtF,UAAW,CACTyB,GAAIa,EACJuC,aAIN7D,MAAO+D,EAAQ,eAAiB,sBA0B3BoB,OAnBf,YAA6B,IAATf,EAAQ,EAARA,KAAQ,EACEnH,mBAAS,GADX,mBACnBR,EADmB,KACXqH,EADW,KAE1B,OACE,kBAACsB,GAAA,EAAD,CACEC,WAAY,SAACxB,EAAQpD,GAAT,OACV,kBAACmD,GAAD,CACEpG,IAAKiD,EACLoD,OAAQA,EACRvC,OAAQ8C,EAAK3D,GACbA,GAAIA,EACJhE,OAAQA,EACRqH,UAAWA,KAGfnI,KAAMyI,EAAKC,W,oBCrGTvJ,GAAeI,EAAfJ,WACAqB,GAAiBgE,EAAjBhE,aAoGOmJ,OAlGf,SAAkBzJ,GAAQ,IAClB4E,EAAO5E,EAAP4E,GADiB,EAEUwB,YAASnH,GAAY,CACpDkE,UAAW,CACTsC,OAAQb,KAFJ8D,EAFe,EAEfA,QAAS5I,EAFM,EAENA,KAAMjB,EAFA,EAEAA,MAFA,EAOiBuC,mBAAS,MAP1B,mBAOhBsI,EAPgB,KAOFC,EAPE,OAQGvI,mBAAS,IARZ,mBAQlB4G,EARkB,KAQV4B,EARU,OASLnF,YAAYnE,GAAc,CAC1C2E,QAAS,SAACC,GACR,IAAMC,EAAUD,EAAIC,QAAQC,MAAM,KAAK,GACvCuE,EAAgB,kBAAC3I,EAAA,EAAD,CAAMiG,KAAK,SAAS9B,IACpC0E,YAAW,WACTF,EAAgB,QACf,MAELtE,OAR0C,SAQnCC,EARmC,GAQA,IAAjBwE,EAAgB,EAAxBhK,KAAQgK,WACvBxE,EAAOgD,WAAW,CAChBzI,MAAOZ,GACPkE,UAAW,CAAEsC,OAAQb,GACrB9E,KAAM,CACJyI,KAAK,gBACAzI,EAAKyI,KADN,CAEFC,QAASsB,EAAWtB,gBAfvBuB,EATgB,oBA8BvB,OAAIlL,EAAc,qCAAWA,EAAMsG,SAC/BuD,EAAgB,KAElB,kBAAC5H,EAAA,EAAD,CAAKsD,OAAO,OAAOC,IAAI,QAAQtB,MAAM,SACnC,kBAACjC,EAAA,EAAD,CAAKsD,OAAQ,CAAE4F,IAAK,UAAYrE,MAAM,OAAOsE,SAAS,QACpD,kBAACnJ,EAAA,EAAD,CACEC,OAAQ,CACNwG,IAAK,QACL2C,OAAQ,QACRlG,KAAM,OACNmG,MAAO,QAET9F,IAAI,SACJqC,WAAW,SAEX,kBAACd,EAAA,EAAD,CAASkB,MAAM,KAAf,aAEF,kBAAC,GAAD,CAAUyB,KAAMzI,EAAKyI,OACrB,kBAACzH,EAAA,EAAD,KACE,kBAACsJ,GAAA,EAAD,CAAWC,UAAU,UACnB,kBAACC,GAAA,EAAD,CACElG,OAAO,OACPC,IAAI,QACJtD,OAAQ,CACNwG,IAAK,QACL2C,OAAQ,QACRlG,KAAM,OACNmG,MAAO,QAETzD,WAAW,QACXjG,MAAM,eAEN,kBAACK,EAAA,EAAD,CAAKC,OAAO,UACV,kBAAC+B,EAAA,EAAD,CACEE,SAAU,SAACC,GACTA,EAAEC,iBACF6G,EAAQ,CACN5G,UAAW,CACTyB,GAAI9E,EAAKyI,KAAK3D,GACdoD,YAGJ4B,EAAU,MAGZ,kBAACxG,EAAA,EAAD,CAAWvE,MAAO6K,EAAcjJ,MAAM,UAAUsC,MAAM,SACpD,kBAACO,EAAA,EAAD,CACEI,SAAU,SAACT,GAAD,OAAO2G,EAAU3G,EAAEU,OAAOF,QACpCA,MAAOuE,EACPpE,YAAY,kBAGhB,kBAACE,EAAA,EAAD,CACE/C,OAAQ,CAAEiD,KAAM,QAChBH,KAAK,SACLI,SAAO,EACPxD,MAAM,mBCpGX8J,GAJC,SAACvK,GACf,OAAO,yC,UCAIwK,GAAiB,SAAAxK,GAAU,IAC9ByK,EAA6BzK,EAA7ByK,SAAUhK,EAAmBT,EAAnBS,MAAUb,EADS,YACAI,EADA,sBAErC,OACE,kBAACoD,EAAA,EAAD,eACE3C,MACEgK,EACE,kBAAC3J,EAAA,EAAD,CAAKU,UAAU,OACb,kBAACR,EAAA,EAAD,KAAOP,GACP,kBAACO,EAAA,EAAD,CAAMmD,MAAM,mBAAZ,MAGF1D,EAGJgK,SAAUA,GACN7K,K,SCXFR,GAAiDC,EAAjDD,6CAEO,SAASsL,GAAT,GAA+C,IAA1B1C,EAAyB,EAAzBA,OAAQ2C,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC1CC,EAAiDF,EAAjDE,MAAOtN,EAA0CoN,EAA1CpN,SAAUuN,EAAgCH,EAAhCG,SAAUC,EAAsBJ,EAAtBI,YAAalH,EAAS8G,EAAT9G,KADa,EAE1BuC,YAC/BhH,GACA,CACE+D,UAAW,CACT6E,YAJEU,EAFmD,EAEnDA,QAAS5I,EAF0C,EAE1CA,KAAMjB,EAFoC,EAEpCA,MAQvB,GAAI6J,EAAS,OAAO,kBAAC5H,EAAA,EAAD,CAAK6E,MAAM,SAAX,cACpB,GAAI9G,EAEF,OADAL,QAAQC,IAAII,GACL,KAET,IAAImM,EAAalL,EAAKkL,WAAWvJ,KAAI,qBAAGwH,QACpCgC,EAAgBnL,EAAKmL,cACtBC,QAAO,SAACC,GAAD,OAASA,EAAIC,SAAWN,KAC/BrJ,KAAI,qBAAGwH,QACNoC,EAAQvL,EAAKuL,MAAM5J,KAAI,qBAAGwH,QAC1BqC,EAAOxL,EAAK8I,QAAQ2C,cAAc9J,KAAI,YAAmB,IAAhBwH,EAAe,EAAfA,KAAe,EAATrE,GACjD,OAAOqE,KAET,OACE,kBAACnI,EAAA,EAAD,CAAKuD,IAAI,QAAQsB,MAAM,SACrB,kBAACC,EAAA,EAAD,CAASzB,MAAO,CAAEwC,MAAO,UAAWC,KAAM,UAAYE,MAAM,KAC1D,kBAAC,KAAD,CAAW5C,MAAO,CAAEsH,cAAe,YACnC,kBAACxK,EAAA,EAAD,CAAMmD,MAAO,CAAEwC,MAAO,SAAUC,KAAM,WAAaK,KAAK,UACrD,IADH,eAKF,kBAACnG,EAAA,EAAD,CACEC,OAAQ,CACNiD,KAAM,QACNuD,IAAK,QACL4C,MAAO,QACPD,OAAQ,UAGV,kBAAC,GAAD,CACEnJ,OAAO,QACP0J,UAAQ,EACRpH,KACE,kBAACvC,EAAA,EAAD,CAAKiC,MAAM,OACT,kBAAC/B,EAAA,EAAD,CAAMiG,KAAK,SAAS4D,EAAMnI,OAA1B,UAGJjC,MAAM,eAEN,kBAAC6C,EAAA,EAAD,CACEmI,UAAU,KACV1K,OAAO,QACP0C,MAAOoH,EACPnH,SAAU,SAACT,GAAD,OAAO2H,EAAQ,gBAAKD,EAAN,CAAYE,MAAO5H,EAAEU,OAAOF,UACpDG,YAAY,8BAGhB,kBAAC9C,EAAA,EAAD,CAAKC,OAAO,QAAQ4G,IAAI,QAAQnG,UAAU,OACxC,kBAAC,GAAD,CAAgBf,MAAM,QACpB,kBAACiL,GAAA,EAAD,CACE9H,YAAY,aACZH,MAAOI,EACPH,SAAU,gBAAGiI,EAAH,EAAGA,OAAH,OAAgBf,EAAQ,gBAAKD,EAAN,CAAY9G,KAAM8H,MACnDC,QAASP,KAGb,kBAAC,GAAD,CAAgB5K,MAAM,YACpB,kBAACiL,GAAA,EAAD,CACE9H,YAAY,QACZH,MAAOqH,EACPpH,SAAU,gBAAGiI,EAAH,EAAGA,OAAH,OAAgBf,EAAQ,gBAAKD,EAAN,CAAYG,SAAUa,MACvDC,QAASZ,KAGZC,EAAcvI,OAAS,EACtB,kBAAC,GAAD,CAAgBjC,MAAM,eACpB,kBAACiL,GAAA,EAAD,CACEjI,MAAOsH,EACPrH,SAAU,gBAAGiI,EAAH,EAAGA,OAAH,OACRf,EAAQ,gBAAKD,EAAN,CAAYI,YAAaY,MAElCC,QAASX,KAGX,MAEN,kBAAC,GAAD,CAAgBxK,MAAM,YAAYM,OAAO,SACvC,kBAAC2K,GAAA,EAAD,CAAQjI,MAAO6H,EAAK,GAAIM,QAASN,MAGrC,kBAAC1F,EAAA,EAAD,CAASzB,MAAO,CAAEwC,MAAO,UAAWC,KAAM,UAAYE,MAAM,KAC1D,kBAAC,KAAD,CAAU5C,MAAO,CAAEsH,cAAe,YAClC,kBAACxK,EAAA,EAAD,CAAMmD,MAAO,CAAEwC,MAAO,SAAUC,KAAM,WAAaK,KAAK,UACrD,IADH,cAKF,kBAACnG,EAAA,EAAD,CACEC,OAAQ,CACNiD,KAAM,QACNuD,IAAK,QACL4C,MAAO,QACPD,OAAQ,UAGV,kBAAC,GAAD,CAAgBzJ,MAAM,QAAQM,OAAO,QAAQ0J,UAAQ,GACnD,kBAACiB,GAAA,EAAD,CACEjI,MAAOlG,EACPmG,SAAU,gBAAGiI,EAAH,EAAGA,OAAH,OAAgBf,EAAQ,gBAAKD,EAAN,CAAYpN,SAAUoO,MACvDC,QAAS,CAAC,QAAS,eAAgB,sBAGzB,UAAbrO,EACC,kBAAC,GAAD,CAAgBwD,OAAO,SACrB,kBAACuC,EAAA,EAAD,CACEC,KAAM,kBAAC,KAAD,MACNK,YAAY,oCAGd,O,kCC7HCiI,GAAY,SAAC7L,GAAW,IAC7BS,EAA6BT,EAA7BS,MAAOgK,EAAsBzK,EAAtByK,SAAa7K,EADQ,YACCI,EADD,sBAElC,OACE,kBAAC,GAAD,CAAgBS,MAAOA,EAAOgK,SAAUA,GACtC,kBAACqB,GAAA,EAAD,eACEC,KAAM,CACJ,CACErJ,OAAQ,CAAC,EAAG,GACZkJ,QAASI,MAAMC,KAAK,CAAEvJ,OAAQ,KAAM,SAACwJ,EAAGC,GAAJ,OAAUA,EAAI,KAClDC,OAAQ,2BACRxI,YAAa,MAEf,CAAEyI,MAAO,KACT,CACE3J,OAAQ,EACRkJ,QAAS,CAAC,KAAM,KAAM,KAAM,MAC5BQ,OAAQ,uBACRxI,YAAa,MAEf,CAAEyI,MAAO,KACT,CACE3J,OAAQ,EACRkJ,QAAS,CAAC,KAAM,MAChBQ,OAAQ,2BACRxI,YAAa,QAGbhE,MClBG,SAAS0M,GAAT,GAAwD,IAApC3B,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,QAAoB5K,GAAS,EAApBgI,OAAoB,4CAChEuE,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,cACbC,EAAMJ,EAAMK,UACZC,EAAQN,EAAMO,WACdC,EAAS,CACXR,EAAMS,cACN,IAAIR,KAAKC,EAAO,EAAGI,EAAOF,GAAKK,eAkB3BC,EAAa,SAAChK,EAAGiK,GACR,UAATA,GACFtC,EAAQ,gBACHD,EADE,CAELwC,MAAM,gBACDxC,EAAKwC,MADL,CAEHD,KAAMjK,EAAEU,OAAOF,WAIR,QAATyJ,GACFtC,EAAQ,gBACHD,EADE,CAELyC,IAAI,gBACCzC,EAAKyC,IADP,CAEDF,KAAMjK,EAAEU,OAAOF,YAMvB,OADAjF,QAAQC,IAAIkM,GAEV,kBAAC7J,EAAA,EAAD,CAAKuD,IAAI,QAAQsB,MAAM,SACrB,kBAACC,EAAA,EAAD,CAASzB,MAAM,iBAAiB2C,MAAM,KACpC,kBAAC,KAAD,CAAY5C,MAAO,CAAEsH,cAAe,YACpC,kBAACxK,EAAA,EAAD,CAAMmD,MAAO,CAAEwC,MAAO,SAAUC,KAAM,WAAaK,KAAK,UACrD,IADH,aAKF,kBAACnG,EAAA,EAAD,CACEC,OAAQ,CACNiD,KAAM,QACNuD,IAAK,QACL4C,MAAO,QACPD,OAAQ,UAGV,kBAAC,GAAD,CACE7F,KAAK,EACLgJ,KACE,kBAACvM,EAAA,EAAD,CACEuD,IAAI,SACJtD,OAAO,QACP2F,WAAY,CAAEC,MAAO,UAAWC,KAAM,WAEtC,kBAAC0G,GAAA,EAAD,eACErE,KAAK,SACLxI,MACE,kBAACK,EAAA,EAAD,CAAKC,OAAO,WACV,kBAACC,EAAA,EAAD,CAAMiG,KAAK,SACT,kBAACjG,EAAA,EAAD,CAAMiG,KAAK,QAAQhG,OAAO,QAA1B,qBAEQ,IAHV,8CAQJyG,SAAUiD,EAAK4C,OACf7J,SAAU,SAAC8J,GAAD,OAAW5C,EAAQ,gBAAKD,EAAN,CAAY4C,QAAQ,OAC5CvN,IAEN,kBAACsN,GAAA,EAAD,eACE7M,MACE,kBAACK,EAAA,EAAD,CAAKC,OAAO,WACV,kBAACC,EAAA,EAAD,CAAMiG,KAAK,SACT,kBAACjG,EAAA,EAAD,CAAMiG,KAAK,QAAQhG,OAAO,QAA1B,oBAEQ,IAHV,uCAQJgI,KAAK,SACLvB,QAASiD,EAAK4C,OACd7J,SAAU,SAAC8J,GAAD,OAAW5C,EAAQ,gBAAKD,EAAN,CAAY4C,QAAQ,OAC5CvN,IACH,MAIL2K,EAAK4C,OAwBL,kBAACzM,EAAA,EAAD,CAAKgI,QAAQ,SAAS/H,OAAO,QAAQS,UAAU,OAC7C,kBAACiM,GAAA,EAAD,CAAUV,OAAQA,EAAQ9F,KAAK,SAASyG,OAAK,IAC7C,kBAAC5M,EAAA,EAAD,CAAKuD,IAAI,QAAQyE,QAAQ,UACvB,kBAAC,GAAD,CACErI,MAAM,cACNgD,MAAOkH,EAAKwC,MAAMD,KAClBxJ,SAAU,SAACT,GAAD,OAAOgK,EAAWhK,EAAG,UAC/BwH,UAAQ,IAEV,kBAAC,GAAD,CACEhK,MAAM,YACNgD,MAAOkH,EAAKyC,IAAIF,KAChBxJ,SAAU,SAACT,GAAD,OAAOgK,EAAWhK,EAAG,QAC/BwH,UAAQ,IAEV,kBAAC,GAAD,CAAgBhK,MAAM,WACpB,kBAACiL,GAAA,EAAD,CACEjI,MAAOkH,EAAKgD,WAAWC,OACvBhC,QAAS,CAAC,QAAS,SAAU,WAC7BlI,SAAU,gBAAGiI,EAAH,EAAGA,OAAH,OACRf,EAAQ,gBACHD,EADE,CAELgD,WAAW,gBACNhD,EAAKgD,WADA,CAERC,OAAQjC,WAMlB,kBAAC,GAAD,CACEtI,KACE,iBACAsH,EAAKgD,WAAWE,OACflD,EAAKgD,WAAWE,MAAQ,EAAI,UAAY,WAG3C,kBAACvK,EAAA,EAAD,CACEG,MAAOkH,EAAKgD,WAAWE,MACvBnK,SAAU,SAACT,GAAD,OACR2H,EAAQ,gBACHD,EADE,CAELgD,WAAW,gBACNhD,EAAKgD,WADA,CAERE,MAAO5K,EAAEU,OAAOF,iBAnE9B,kBAAC3C,EAAA,EAAD,CAAKgI,QAAQ,SAAS/H,OAAO,QAAQS,UAAU,OAC7C,kBAACiM,GAAA,EAAD,CACEV,OAAQA,EACR9F,KAAK,SACL6G,SArGK,SAACC,GACM,IAApBA,EAAM,GAAGrL,QACXkI,EAAQ,gBACHD,EADE,CAELwC,MAAM,gBACDxC,EAAKwC,MADL,CAEHa,KAAMD,EAAM,GAAG,KAEjBX,IAAI,gBACCzC,EAAKyC,IADP,CAEDY,KAAMD,EAAM,GAAG,SA4FTL,OAAK,IAEP,kBAAC5M,EAAA,EAAD,CAAKuD,IAAI,QAAQyE,QAAQ,UACvB,kBAAC,GAAD,CACErI,MAAM,cACNgD,MAAOkH,EAAKwC,MAAMD,KAClBxJ,SAAU,SAACT,GAAD,OAAOgK,EAAWhK,EAAG,UAC/BwH,UAAQ,IAEV,kBAAC,GAAD,CACEhK,MAAM,YACNgD,MAAOkH,EAAKyC,IAAIF,KAChBxJ,SAAU,SAACT,GAAD,OAAOgK,EAAWhK,EAAG,QAC/BwH,UAAQ,S,gECtEXwD,G,+MA7Db3P,MAAQ,CACN4P,OAAQ,I,EAEVC,mBAAqB,SAAClL,GACpBzE,QAAQC,IAAIwE,EAAEU,OAAOyK,cACrB,EAAKC,SAAS,CAAEH,OAAQjL,EAAEU,OAAOyK,eACjC5P,QAAQC,IAAI,EAAKH,Q,wDAIjB,OACE,kBAACwC,EAAA,EAAD,CAAKuD,IAAI,QAAQsB,MAAM,SACrB,kBAACC,EAAA,EAAD,CAASzB,MAAO,CAAEwC,MAAO,UAAWC,KAAM,UAAYE,MAAM,KAC1D,kBAAC,KAAD,CAAU5C,MAAO,CAAEsH,cAAe,YAClC,kBAACxK,EAAA,EAAD,CAAMmD,MAAO,CAAEwC,MAAO,SAAUC,KAAM,WAAaK,KAAK,UACrD,IADH,eAKF,kBAACnG,EAAA,EAAD,CAAKC,OAAO,SACV,kBAAC,GAAD,CACEsM,KAAK,UACLhK,KACE,kBAACvC,EAAA,EAAD,CAAKiC,MAAM,OACT,kBAAC/B,EAAA,EAAD,CAAMiG,KAAK,SAAX,YAIJ,kBAACqH,GAAA,EAAD,CACE1K,YAAY,uDACZqD,KAAK,SACLsH,OAAK,EACLC,QAAQ,MAId,kBAAC1N,EAAA,EAAD,CAAKC,OAAO,SACV,kBAAC,KAAD,CACE0N,OAAO,mDACPC,aAAa,GACbC,KAAM,CACJvK,OAAQ,IACRoK,QAAQ,EACRI,SAAS,EACTC,QAAS,CACP,oCACA,oCACA,kCACA,8CAEFC,QACE,4DAEJpL,SAAUqL,KAAKZ,2B,GAtDDa,IAAMzP,WCMjB0P,GARC,SAACjP,GACf,OACE,kBAACc,EAAA,EAAD,CAAKuD,IAAI,QAAQsB,MAAM,SAAvB,YCII1G,GAAeI,EAAfJ,WAEJiQ,GAAmB,CACrBrE,MAAO,GACPtN,SAAU,QACVuN,SAAU,WACVC,YAAa,cACblH,KAAM,OACNsJ,MAAO,CACLa,MAAM,IAAIxB,MAAOQ,cACjBE,KAAM,IAERE,IAAK,CACHY,MAAM,IAAIxB,MAAOQ,cACjBE,KAAM,IAERK,QAAQ,EACRI,WAAY,CACVE,MAAO,EACPD,OAAQ,UAsCGuB,OAnCf,YAAgC,IAAX1J,EAAU,EAAVA,OAAU,EACLrE,mBAAS8N,IADJ,mBACtBvE,EADsB,KAChBC,EADgB,OAEIxE,YAASnH,GAAY,CACpDkE,UAAW,CACTsC,YAFIiD,EAFqB,EAErBA,QAAS5I,EAFY,EAEZA,KAAMjB,EAFM,EAENA,MAKvB,GAAI6J,EAAS,OAAO,kBAAC5H,EAAA,EAAD,CAAK6E,MAAM,SAAX,cACpB,GAAI9G,EAEF,OADAL,QAAQC,IAAII,GACL,KAVoB,IAczB8C,EAFW7B,EAATyI,KACAC,QACY,GAClB,OACE,kBAAC1F,EAAA,EAAD,CAAMW,MAAOkH,GACX,kBAAC,EAAD,CAAMA,KAAMA,EAAMC,QAASA,GACzB,kBAAC9J,EAAA,EAAD,CAAKL,MAAM,cACT,kBAACiK,GAAD,CAAWC,KAAMA,EAAMC,QAASA,EAAS5C,OAAQrG,KAEnD,kBAACb,EAAA,EAAD,CAAKL,MAAM,YACT,kBAAC6L,GAAD,CAAU3B,KAAMA,EAAMC,QAASA,EAAS5C,OAAQrG,KAElD,kBAACb,EAAA,EAAD,CAAKL,MAAM,eACT,kBAAC,GAAD,CAAakK,KAAMA,EAAMC,QAASA,EAAS5C,OAAQrG,KAErD,kBAACb,EAAA,EAAD,CAAKL,MAAM,WACT,kBAAC,GAAD,U,icCnDV,IAAI2O,GAAUC,mBAAOvO,IAAPuO,CAAH,MAuBHrQ,GAAkBK,EAAlBL,cAwCOsQ,OAtCf,YAAsD,IAAjCxJ,EAAgC,EAAhCA,UAAWE,EAAqB,EAArBA,QAAYhG,EAAS,yCAC3BoG,YAASpH,IAAzBc,EAD2C,EAC3CA,KAAMjB,EADqC,EACrCA,MACd,OAAIA,EAAc,sCAAYA,EAAMsG,SAElC,kBAACrE,EAAA,EAAD,CAAKsD,OAAQ,CAAEmL,IAAK,QAAU/N,UAAU,UACtC,kBAAC4N,GAAD,CACElL,MAAO,CAAEsL,SAAU,YACnBpL,OAAO,QACP5C,UAAU,MACVsH,QAAQ,QACR/F,MAAM,SAEN,kBAACjC,EAAA,EAAD,CAAK2O,UAAU,QAAQ9O,UAAWmF,EAAY,OAAS,UACrD,kBAAC4J,GAAD,CAAW9K,GAAI9E,EAAK2F,OAAQV,QAAS/E,EAAM+E,WAE7C,kBAACjE,EAAA,EAAD,CACEoD,MAAO,CACLyL,UAAW,mBACXH,SAAU,WACVI,OAAQ,IACRrI,IAAK,MACLvD,KAAM,OAERK,IAAI,QACJqC,WAAY,CAAEE,KAAM,SAAUD,MAAO,WACrC8I,UAAU,QACV9O,UAAWqF,EAAU,OAAS,QAE9B,kBAAC,GAAD,OAEF,kBAAClF,EAAA,EAAD,CAAKsD,OAAO,OAAOuB,MAAM,OAAOnE,UAAU,UACxC,kBAAC,GAAD,CAAWiE,OAAQ3F,EAAK2F,a,8BCzD5BoK,GAAQC,qBAAUC,KAAS,CAC/BC,YAAa,QACbC,OAAQ,CACNC,KAAM,CACJC,OAAQ,SACRlJ,KAAM,OACN7C,OAAQ,WA2CCgM,OAtCf,SAAapQ,GAAQ,IAAD,EACgBoB,oBAAS,GADzB,mBACX0E,EADW,KACAC,EADA,OAEY3E,oBAAS,GAFrB,mBAEX4E,EAFW,KAEFC,EAFE,OAGM7E,oBAAS,GAHf,mBAGX8E,EAHW,KAGLC,EAHK,KAIlB,OACE,kBAACkK,GAAA,EAAD,CAASR,MAAOA,GAAOS,UAAWpK,EAAO,OAAS,SAChD,kBAAC,GAAD,CACEA,KAAMA,EACNC,QAASA,EACTL,UAAWA,EACXC,aAAcA,EACdC,QAASA,EACTC,WAAYA,IAEd,kBAACnF,EAAA,EAAD,eACE4F,WAAY,CAAEC,MAAO,UAAWC,KAAM,UACtC1C,MAAO,CAAE2C,WAAY,kBACrB0J,IAAI,OACJ/O,UAAU,SACVuB,MAAM,SACN+F,QAAQ,QACR1E,OAAO,QACHpE,GAEJ,kBAAC,EAAD,CAAWN,OAAK,EAACD,KAAK,SAASD,UAAW+E,EAAO5E,UAAU,SAC3D,kBAAC,EAAD,CACED,OAAK,EACLD,KAAK,IACLD,UAAW8P,GACXtJ,QAASA,EACTF,UAAWA,EACXnG,UAAU,iB,kECnCZU,GAAgBiE,EAAhBjE,YAEFmQ,GAAQ,IAAIC,KAAc,CAC9BC,iBAAkB,SAACC,GAAD,OAAYA,EAAOC,KAAO,QAGxCC,GAAY5L,cAAQ,YAAwB,IAArB6L,EAAoB,EAApBA,cACvBA,GAAeA,EAAcrP,KAAI,gBAAG0D,EAAH,EAAGA,QAAH,OAAiB3G,QAAQC,IAAI0G,SAG9D4L,GAAWC,aAAe,CAC9BC,IAAK,gCACLC,QAAS,CACPC,cAAetM,aAAauM,QAAQ,iBAIlC9L,GAAS,IAAI+L,KAAa,CAC9BC,KAAMC,KAAWtF,KAAK,CAAC4E,GAAWE,KAClCP,SACAvL,QAAS,YAAsC,IAAnCuM,EAAkC,EAAlCA,aAAcV,EAAoB,EAApBA,cACxBtS,QAAQC,IAAI,gBAAiBqS,GAC7BtS,QAAQC,IAAI,eAAgB+S,IAE9BC,UAAW,KAGP9M,GAAQE,aAAauM,QAAQ,cAC7B3L,GAASZ,aAAauM,QAAQ,UACpCZ,GAAMjL,UAAU,CACdzF,KAAM,CACJG,WAAY5C,QAAQsH,IACpBc,OAAQA,MAIRd,IACFW,GACGoM,OAAO,CAAEC,SAAUtR,GAAa8C,UAAW,CAAEwB,YAC7C3G,MAAK,YAAe,IAAZ8B,EAAW,EAAXA,KACP0Q,GAAMjL,UAAU,CACdzF,KAAM,CACJG,WAAYH,EAAK8R,WAAWpM,SAC5BC,OAAQ3F,EAAK8R,WAAWhN,SAMlC,IAAMiN,GAAO,kBACX,kBAAC,KAAD,CAAgBvM,OAAQA,IACtB,kBAAC,KAAD,KACE,kBAAC,GAAD,SAKNwM,IAAS/R,OAAO,kBAAC,GAAD,MAAUgS,SAASC,eAAe,SpBlD3C,SAAkBpU,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoU,IAAIC,GAAwB5U,OAAOC,SAAS4U,MACpDC,SAAW9U,OAAOC,SAAS6U,OAIvC,OAGF9U,OAAO+U,iBAAiB,QAAQ,WAC9B,IAAM1U,EAAK,UAAMuU,GAAN,sBAEP9U,IAgEV,SAAiCO,EAAOC,GAEtC0U,MAAM3U,EAAO,CACXuT,QAAS,CAAE,iBAAkB,YAE5BlT,MAAK,SAAAuU,GAEJ,IAAMC,EAAcD,EAASrB,QAAQuB,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9U,UAAUC,cAAc8U,MAAM5U,MAAK,SAAAC,GACjCA,EAAa4U,aAAa7U,MAAK,WAC7BV,OAAOC,SAASuV,eAKpBpV,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAsU,CAAwBpV,EAAOC,GAI/BC,UAAUC,cAAc8U,MAAM5U,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OoB2B/BE,K","file":"static/js/main.98401f71.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import gql from \"graphql-tag\";\n\nexport default {\n  IS_LOGGED_IN: gql`\n    query IsUserLoggedIn {\n      isLoggedIn @client\n    }\n  `,\n  FETCH_USER_ID: gql`\n    query fetchUserId {\n      userId @client\n    }\n  `,\n  FETCH_USER: gql`\n    query fetchUser($userId: ID!) {\n      user(id: $userId) {\n        id\n        email\n        apikeys\n      }\n    }\n  `,\n  FETCH_ACCOUNTS: gql`\n    query fetchAccounts($apikeys: [String!]) {\n      accounts(apikeys: $apikeys) {\n        id\n        first_name\n        last_name\n        apikey\n        name\n        email\n        is_public\n        image_id\n        organizations {\n          id\n          name\n        }\n      }\n    }\n  `,\n  FETCH_ACCOUNT: gql`\n    query fetchAccount($apikey: String!) {\n      account(apikey: $apikey) {\n        id\n        first_name\n        last_name\n        apikey\n        name\n        email\n        is_public\n        image_id\n        organizations {\n          id\n          name\n        }\n      }\n    }\n  `,\n  FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES: gql`\n    query fetchCategories($apikey: String!) {\n      categories(apikey: $apikey) {\n        name\n        id\n      }\n      subcategories(apikey: $apikey) {\n        name\n        id\n        parent\n      }\n      types(apikey: $apikey) {\n        name\n        id\n      }\n      account(apikey: $apikey) {\n        name\n        organizations {\n          id\n          name\n        }\n      }\n    }\n  `\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport Queries from \"../graphql/queries\";\nconst { IS_LOGGED_IN } = Queries;\n\nconst AuthRoute = ({\n  component: Component,\n  path,\n  exact,\n  routeType,\n  ...rest\n}) => (\n  <Query query={IS_LOGGED_IN}>\n    {({ data }) => {\n      if (routeType === \"auth\") {\n        return (\n          <Route\n            path={path}\n            exact={exact}\n            render={(props) =>\n              !data.isLoggedIn ? (\n                <Component {...props} {...rest} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          />\n        );\n      } else {\n        return (\n          <Route\n            {...rest}\n            render={(props) =>\n              data.isLoggedIn ? (\n                <Component {...props} {...rest} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n        );\n      }\n    }}\n  </Query>\n);\nexport default AuthRoute;\n","import gql from \"graphql-tag\";\nexport default {\n  LOGIN_USER: gql`\n    mutation LoginUser($email: String!, $password: String!) {\n      login(email: $email, password: $password) {\n        id\n        token\n        loggedIn\n      }\n    }\n  `,\n  REGISTER_USER: gql`\n    mutation RegisterUser($email: String!, $password: String!) {\n      register(email: $email, password: $password) {\n        id\n        token\n        loggedIn\n      }\n    }\n  `,\n  VERIFY_USER: gql`\n    mutation VerifyUser($token: String!) {\n      verifyUser(token: $token) {\n        id\n        loggedIn\n      }\n    }\n  `,\n  PUSH_API_KEY: gql`\n    mutation pushAPIkey($id: ID!, $apikey: String!) {\n      pushAPIkey(id: $id, apikey: $apikey) {\n        id\n        email\n        apikeys\n      }\n    }\n  `,\n  DELETE_API_KEY: gql`\n    mutation deleteAPIkey($id: ID!, $apikey: String!) {\n      deleteAPIkey(id: $id, apikey: $apikey) {\n        id\n        email\n        apikeys\n      }\n    }\n  `,\n};\n","import React, { useState } from \"react\";\nimport { Box, Text } from \"grommet\";\n\nconst Tab = ({ label, onClick, activeTab }) => {\n  let className = \"tab-item\";\n  let active = false;\n  if (activeTab === label) {\n    className += \"active\";\n    active = true;\n  }\n  return (\n    <Box margin=\"medium\" className={className} onClick={() => onClick(label)}>\n      <Text weight={active ? \"bold\" : \"normal\"}>{label}</Text>\n    </Box>\n  );\n};\n\nconst Tabs = ({ children }) => {\n  const [activeTab, setActiveTab] = useState(children[0].props.label);\n  const onClickTabItem = (tab) => {\n    setActiveTab(tab);\n  };\n  return (\n    <Box>\n      <Box direction=\"row\">\n        {children.map((child) => {\n          const { label } = child.props;\n          return (\n            <Tab\n              activeTab={activeTab}\n              key={label}\n              label={label}\n              onClick={onClickTabItem}\n            />\n          );\n        })}\n      </Box>\n      <Box>\n        {children.map((child) => {\n          if (child.props.label !== activeTab) return undefined;\n          return child.props.children;\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Tabs;\n","import React, { useEffect, useRef } from \"react\";\nimport { Box, Form, FormField, TextInput, Button } from \"grommet\";\nimport { Mail } from \"grommet-icons\";\nconst Demo = ({ email, setEmail, password, setPassword, login, error }) => {\n  const inputRef = useRef(null);\n  useEffect(() => {\n    let i = 0;\n    let string = \"demo@demo.com123456\";\n    const int = setInterval(() => {\n      if (i <= 13) {\n        setEmail(string.slice(0, i));\n      } else if (i < string.length && i > 13) {\n        setPassword(string.slice(13, i + 1));\n      } else {\n        inputRef.current.click();\n        clearInterval(int);\n      }\n      i++;\n      return () => {\n        clearInterval(int);\n      };\n    }, 200);\n  }, [setEmail, setPassword]);\n\n  return (\n    <Form\n      align=\"end\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        login({\n          variables: {\n            email,\n            password,\n          },\n        });\n      }}\n    >\n      <FormField info=\"Email Address\" align=\"start\">\n        <TextInput\n          icon={<Mail />}\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"example@example.com\"\n        />\n      </FormField>\n      <FormField info=\"Password\" align=\"start\">\n        <TextInput\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </FormField>\n      <Button\n        ref={inputRef}\n        margin={{ left: \"auto\" }}\n        type=\"submit\"\n        primary\n        label=\"Submit\"\n      />\n      <Box style={{ color: \"Red\" }} align=\"center\" height=\"20px\" pad=\"large\">\n        {error}\n      </Box>\n    </Form>\n  );\n};\nexport default Demo;\n","import React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Mutations from \"../../graphql/mutations\";\nimport { Box, Form, FormField, TextInput, Button, Heading } from \"grommet\";\nimport Tabs from \"../Custom/tabs\";\nimport Demo from \"../Custom/demoLogin\";\nimport { Mail } from \"grommet-icons\";\n\nconst { LOGIN_USER, REGISTER_USER } = Mutations;\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [login] = useMutation(LOGIN_USER, {\n    onCompleted: (data) => {\n      const { token, id } = data.login;\n      localStorage.setItem(\"auth-token\", token);\n      localStorage.setItem(\"userId\", id);\n      props.history.push(\"/\");\n    },\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      setError(message);\n    },\n    update: (client, data) => {\n      updateCache(client, data);\n    },\n  });\n\n  const [register] = useMutation(REGISTER_USER, {\n    onCompleted: (data) => {\n      login({ variables: { email, password } });\n    },\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      setError(message + \"hello\");\n    },\n  });\n\n  function updateCache(client, { data }) {\n    client.writeData({\n      data: {\n        isLoggedIn: data.login.loggedIn,\n        userId: data.login.id,\n      },\n    });\n  }\n\n  return (\n    <Box width=\"100%\" height=\"100%\" align=\"center\">\n      <Heading>Event Tool</Heading>\n      <Tabs>\n        <Box label=\"Login\" align=\"center\" pad=\"small\">\n          <Form\n            align=\"end\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              login({\n                variables: {\n                  email,\n                  password,\n                },\n              });\n            }}\n          >\n            <FormField info=\"Email Address\" align=\"start\">\n              <TextInput\n                icon={<Mail />}\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"example@example.com\"\n              />\n            </FormField>\n            <FormField info=\"Password\" align=\"start\">\n              <TextInput\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </FormField>\n            <Button\n              margin={{ left: \"auto\" }}\n              type=\"submit\"\n              primary\n              label=\"Submit\"\n            />\n            <Box\n              style={{ color: \"Red\" }}\n              align=\"center\"\n              height=\"20px\"\n              pad=\"large\"\n            >\n              {error}\n            </Box>\n          </Form>\n        </Box>\n        <Box label=\"Register\">\n          <Form\n            align=\"end\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              register({\n                variables: {\n                  email,\n                  password,\n                },\n              });\n            }}\n          >\n            <FormField info=\"Email Address\" align=\"start\">\n              <TextInput\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"example@example.com\"\n              />\n            </FormField>\n            <FormField info=\"Password\" align=\"start\">\n              <TextInput\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </FormField>\n            <Button\n              margin={{ left: \"auto\" }}\n              type=\"submit\"\n              primary\n              label=\"Submit\"\n            />\n            <Box\n              style={{ color: \"Red\" }}\n              align=\"center\"\n              height=\"20px\"\n              pad=\"large\"\n            >\n              {error}\n            </Box>\n          </Form>\n        </Box>\n        <Box label=\"Demo\" align=\"center\" pad=\"small\">\n          <Demo\n            error={error}\n            login={login}\n            password={password}\n            setPassword={setPassword}\n            email={email}\n            setEmail={setEmail}\n          />\n        </Box>\n      </Tabs>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Queries from \"../../../graphql/queries\";\nimport {\n  Box,\n  Heading,\n  Header,\n  CheckBox,\n  Button,\n  ResponsiveContext,\n  Menu,\n} from \"grommet\";\nimport { Logout, Tools, Menu as MenuIcon } from \"grommet-icons\";\nconst { IS_LOGGED_IN } = Queries;\n\nconst HeaderPanel = ({\n  sidePanel,\n  setSidePanel,\n  pending,\n  setPending,\n  mode,\n  setMode,\n  ...props\n}) => {\n  const { data, error } = useQuery(IS_LOGGED_IN);\n  const eventClient = useApolloClient();\n  if (error) return <h3>Error: {error.message}</h3>;\n  const logout = (e) => {\n    e.preventDefault();\n    localStorage.removeItem(\"auth-token\");\n    localStorage.removeItem(\"userId\");\n    eventClient.writeData({\n      data: {\n        isLoggedIn: false,\n        userId: null,\n      },\n    });\n  };\n\n  return (\n    <Header\n      height=\"8vh\"\n      background={{ light: \"light-2\", dark: \"dark-1\" }}\n      style={{ transition: \"0.25s ease-out\" }}\n      width=\"100vw\"\n      pad=\"small\"\n    >\n      <Box direction=\"row\" align=\"center\">\n        <Heading\n          margin=\"xsmall\"\n          level=\"1\"\n          color=\"brand\"\n          style={{ userSelect: \"none\" }}\n        >\n          Event Tool\n        </Heading>\n        <Tools color=\"brand\" size=\"large\" />\n      </Box>\n      <ResponsiveContext.Consumer>\n        {(responsive) =>\n          responsive === \"small\" ? (\n            <>\n              <Button margin=\"none\" primary color=\"accent-1\" label=\"Submit\" />\n              <Menu\n                dropProps={{ align: { top: \"bottom\", left: \"left\" } }}\n                icon={<MenuIcon />}\n                pad=\"small\"\n                items={\n                  data.isLoggedIn\n                    ? [\n                        {\n                          label: <CheckBox checked={mode} label=\"Dark Mode\" />,\n                          onClick: () => setMode(!mode),\n                        },\n                        {\n                          label: (\n                            <CheckBox checked={sidePanel} label=\"Options\" />\n                          ),\n                          onClick: () => setSidePanel(!sidePanel),\n                        },\n                        {\n                          label: \"Logout\",\n                          onClick: (e) => logout(e),\n                        },\n                      ]\n                    : []\n                }\n              />\n            </>\n          ) : (\n            <Box direction=\"row\" gap=\"small\">\n              <CheckBox\n                label=\"Dark Mode\"\n                checked={mode}\n                onChange={() => setMode(!mode)}\n                toggle\n              />\n              {data.isLoggedIn ? (\n                <>\n                  <CheckBox\n                    label=\"Options\"\n                    checked={sidePanel}\n                    onClick={() => {\n                      setPending(false);\n                      setSidePanel(!sidePanel);\n                    }}\n                    toggle\n                  />\n                  <CheckBox\n                    label=\"Pending\"\n                    checked={pending}\n                    onClick={() => {\n                      setPending(!pending);\n                      setSidePanel(false);\n                    }}\n                    toggle\n                  />\n                  <Box gap=\"small\" margin=\"medium\" direction=\"row\">\n                    <Button primary color=\"accent-1\" label=\"Submit\" />\n                    <Button\n                      icon={<Logout />}\n                      color={{ light: \"brand\", dark: \"brand\" }}\n                      primary\n                      label=\"Logout\"\n                      onClick={logout}\n                      style={{ cursor: \"pointer\" }}\n                    />\n                  </Box>\n                </>\n              ) : null}\n            </Box>\n          )\n        }\n      </ResponsiveContext.Consumer>\n    </Header>\n  );\n};\n\nexport default HeaderPanel;\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Queries from \"../../graphql/queries\";\nimport Mutations from \"../../graphql/mutations\";\nimport { Box, Text, List } from \"grommet\";\nimport { FormTrash } from \"grommet-icons\";\nconst { DELETE_API_KEY } = Mutations;\nconst { FETCH_ACCOUNT, FETCH_USER } = Queries;\nfunction AccountCard({ apikey, id, userId, active, setActive }) {\n  const [hover, sethover] = useState(false);\n  const [deleteAPI] = useMutation(DELETE_API_KEY, {\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      console.log(message);\n    },\n    update(client, { data: { deleteAPIkey } }) {\n      let data = client.readQuery({\n        query: FETCH_USER,\n        variables: { userId },\n      });\n      client.writeQuery({\n        query: FETCH_USER,\n        variables: { userId },\n        data: {\n          user: {\n            ...data.user,\n            apikeys: deleteAPIkey.apikeys,\n          },\n        },\n      });\n    },\n  });\n  const { loading, data, error } = useQuery(FETCH_ACCOUNT, {\n    variables: {\n      apikey,\n    },\n  });\n  if (error)\n    return (\n      <h3 style={{ color: \"red\", fontWeight: \"bolder\" }}>\n        {error.message.split(\":\")[1]}\n      </h3>\n    );\n  if (loading) return null;\n  let { account } = data;\n  return (\n    <Box\n      margin=\"none\"\n      key={id}\n      direction=\"row\"\n      border={\n        id === active\n          ? {\n              color: \"brand\",\n              size: \"small\",\n            }\n          : false\n      }\n      justify=\"between\"\n      background={{ light: \"light-4\", dark: \"dark-5\" }}\n      flex=\"grow\"\n      style={{ cursor: \"pointer\" }}\n      onClick={() => setActive(id)}\n    >\n      <Box pad=\"xsmall\" margin=\"xsmall\" direction=\"column\">\n        <Text size=\"xsmall\" truncate>\n          <Text size=\"xsmall\" weight=\"bold\">\n            Account Name:\n          </Text>{\" \"}\n          {account.name}\n        </Text>\n        <Text size=\"xsmall\" truncate>\n          <Text size=\"xsmall\" weight=\"bold\">\n            Email:\n          </Text>{\" \"}\n          {account.email}\n        </Text>\n        <Text size=\"xsmall\" truncate>\n          <Text size=\"xsmall\" weight=\"bold\">\n            API_KEY:\n          </Text>{\" \"}\n          {account.apikey}\n        </Text>\n      </Box>\n      <div style={{ width: \"25px\", padding: \"3px\" }}>\n        <FormTrash\n          onMouseEnter={() => sethover(true)}\n          onMouseLeave={() => sethover(false)}\n          onClick={(e) => {\n            e.preventDefault();\n            deleteAPI({\n              variables: {\n                id: userId,\n                apikey,\n              },\n            });\n          }}\n          color={hover ? \"status-error\" : \"status-disabled\"}\n        />\n      </div>\n    </Box>\n  );\n}\n\nfunction Accounts({ user }) {\n  const [active, setActive] = useState(0);\n  return (\n    <List\n      primaryKey={(apikey, id) => (\n        <AccountCard\n          key={id}\n          apikey={apikey}\n          userId={user.id}\n          id={id}\n          active={active}\n          setActive={setActive}\n        />\n      )}\n      data={user.apikeys}\n    />\n  );\n}\n\nexport default Accounts;\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Queries from \"../../../graphql/queries\";\nimport Mutations from \"../../../graphql/mutations\";\nimport Accounts from \"../../Custom/AccountList\";\nimport {\n  Box,\n  Button,\n  Form,\n  FormField,\n  TextInput,\n  Text,\n  Accordion,\n  AccordionPanel,\n  Heading,\n} from \"grommet\";\n\nconst { FETCH_USER } = Queries;\nconst { PUSH_API_KEY } = Mutations;\n\nfunction SidePane(props) {\n  let { id } = props;\n  const { loading, data, error } = useQuery(FETCH_USER, {\n    variables: {\n      userId: id,\n    },\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n  let [apikey, setApiKey] = useState(\"\");\n  const [pushApi] = useMutation(PUSH_API_KEY, {\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      setErrorMessage(<Text size=\"small\">{message}</Text>);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 10000);\n    },\n    update(client, { data: { pushAPIkey } }) {\n      client.writeQuery({\n        query: FETCH_USER,\n        variables: { userId: id },\n        data: {\n          user: {\n            ...data.user,\n            apikeys: pushAPIkey.apikeys,\n          },\n        },\n      });\n    },\n  });\n  if (error) return <h3>Error {error.message}</h3>;\n  if (loading) return null;\n  return (\n    <Box height=\"100%\" pad=\"small\" align=\"start\">\n      <Box height={{ max: \"65.6vh\" }} width=\"100%\" overflow=\"auto\">\n        <Box\n          margin={{\n            top: \"small\",\n            bottom: \"small\",\n            left: \"15px\",\n            right: \"15px\",\n          }}\n          pad=\"xsmall\"\n          background=\"brand\"\n        >\n          <Heading level=\"4\">Accounts</Heading>\n        </Box>\n        <Accounts user={data.user} />\n        <Box>\n          <Accordion alignSelf=\"center\">\n            <AccordionPanel\n              height=\"30px\"\n              pad=\"small\"\n              margin={{\n                top: \"small\",\n                bottom: \"small\",\n                left: \"15px\",\n                right: \"15px\",\n              }}\n              background=\"brand\"\n              label=\"Add Account\"\n            >\n              <Box margin=\"medium\">\n                <Form\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    pushApi({\n                      variables: {\n                        id: data.user.id,\n                        apikey,\n                      },\n                    });\n                    setApiKey(\"\");\n                  }}\n                >\n                  <FormField error={errorMessage} label=\"API Key\" align=\"start\">\n                    <TextInput\n                      onChange={(e) => setApiKey(e.target.value)}\n                      value={apikey}\n                      placeholder=\"2HFXXX2G....\"\n                    />\n                  </FormField>\n                  <Button\n                    margin={{ left: \"auto\" }}\n                    type=\"submit\"\n                    primary\n                    label=\"Submit\"\n                  />\n                </Form>\n              </Box>\n            </AccordionPanel>\n          </Accordion>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default SidePane;\n","import React from \"react\";\n\nconst Pending = (props) => {\n  return <div>pending</div>;\n};\n\nexport default Pending;\n","import React from \"react\";\nimport { FormField, Box, Text } from \"grommet\";\n\nexport const FormFieldLabel = props => {\n  const { required, label, ...rest } = props;\n  return (\n    <FormField\n      label={\n        required ? (\n          <Box direction=\"row\">\n            <Text>{label}</Text>\n            <Text color=\"status-critical\">*</Text>\n          </Box>\n        ) : (\n          label\n        )\n      }\n      required={required}\n      {...rest}\n    ></FormField>\n  );\n};\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Queries from \"../../../../graphql/queries\";\nimport { Box, Heading, Select, TextInput, Text } from \"grommet\";\nimport { FormFieldLabel } from \"../../../Custom/FormFieldLabel\";\nimport { FaWpforms, FaRegMap, FaSearch } from \"react-icons/fa\";\n\nconst { FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES } = Queries;\n\nexport default function BasicInfo({ apikey, form, setForm }) {\n  let { title, location, category, subcategory, type } = form;\n  const { loading, data, error } = useQuery(\n    FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES,\n    {\n      variables: {\n        apikey,\n      },\n    }\n  );\n  if (loading) return <Box width=\"100vw\">...loading</Box>;\n  if (error) {\n    console.log(error);\n    return null;\n  }\n  let categories = data.categories.map(({ name }) => name);\n  let subcategories = data.subcategories\n    .filter((obj) => obj.parent === category)\n    .map(({ name }) => name);\n  let types = data.types.map(({ name }) => name);\n  let orgs = data.account.organizations.map(({ name, id }) => {\n    return name;\n  });\n  return (\n    <Box pad=\"small\" width=\"100vw\">\n      <Heading color={{ light: \"light-6\", dark: \"dark-6\" }} level=\"2\">\n        <FaWpforms style={{ verticalAlign: \"bottom\" }} />\n        <Text color={{ light: \"dark-1\", dark: \"light-1\" }} size=\"xlarge\">\n          {\" \"}\n          Basic Info\n        </Text>\n      </Heading>\n      <Box\n        margin={{\n          left: \"large\",\n          top: \"small\",\n          right: \"small\",\n          bottom: \"small\",\n        }}\n      >\n        <FormFieldLabel\n          margin=\"small\"\n          required\n          info={\n            <Box align=\"end\">\n              <Text size=\"small\">{title.length} / 70</Text>\n            </Box>\n          }\n          label=\"Event Title\"\n        >\n          <TextInput\n            maxLength=\"70\"\n            margin=\"small\"\n            value={title}\n            onChange={(e) => setForm({ ...form, title: e.target.value })}\n            placeholder=\"Be clear and descriptive\"\n          />\n        </FormFieldLabel>\n        <Box margin=\"small\" gap=\"small\" direction=\"row\">\n          <FormFieldLabel label=\"Type\">\n            <Select\n              placeholder=\"Conference\"\n              value={type}\n              onChange={({ option }) => setForm({ ...form, type: option })}\n              options={types}\n            />\n          </FormFieldLabel>\n          <FormFieldLabel label=\"Category\">\n            <Select\n              placeholder=\"Music\"\n              value={category}\n              onChange={({ option }) => setForm({ ...form, category: option })}\n              options={categories}\n            />\n          </FormFieldLabel>\n          {subcategories.length > 1 ? (\n            <FormFieldLabel label=\"Subcategory\">\n              <Select\n                value={subcategory}\n                onChange={({ option }) =>\n                  setForm({ ...form, subcategory: option })\n                }\n                options={subcategories}\n              />\n            </FormFieldLabel>\n          ) : null}\n        </Box>\n        <FormFieldLabel label=\"Organizer\" margin=\"small\">\n          <Select value={orgs[0]} options={orgs} />\n        </FormFieldLabel>\n      </Box>\n      <Heading color={{ light: \"light-6\", dark: \"dark-6\" }} level=\"2\">\n        <FaRegMap style={{ verticalAlign: \"bottom\" }} />\n        <Text color={{ light: \"dark-1\", dark: \"light-1\" }} size=\"xlarge\">\n          {\" \"}\n          Locations\n        </Text>\n      </Heading>\n      <Box\n        margin={{\n          left: \"large\",\n          top: \"small\",\n          right: \"small\",\n          bottom: \"small\",\n        }}\n      >\n        <FormFieldLabel label=\"Venue\" margin=\"small\" required>\n          <Select\n            value={location}\n            onChange={({ option }) => setForm({ ...form, location: option })}\n            options={[\"Venue\", \"Online Event\", \"To Be Announced\"]}\n          />\n        </FormFieldLabel>\n        {location === \"Venue\" ? (\n          <FormFieldLabel margin=\"small\">\n            <TextInput\n              icon={<FaSearch />}\n              placeholder=\"Search for a venue or address.\"\n            />\n          </FormFieldLabel>\n        ) : null}\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { MaskedInput } from \"grommet\";\nimport { FormFieldLabel } from \"./FormFieldLabel\";\n\nexport const TimeInput = (props) => {\n  let { label, required, ...rest } = props;\n  return (\n    <FormFieldLabel label={label} required={required}>\n      <MaskedInput\n        mask={[\n          {\n            length: [1, 2],\n            options: Array.from({ length: 12 }, (v, k) => k + 1),\n            regexp: /^1[0,1-2]$|^0?[1-9]$|^0$/,\n            placeholder: \"hh\",\n          },\n          { fixed: \":\" },\n          {\n            length: 2,\n            options: [\"00\", \"15\", \"30\", \"45\"],\n            regexp: /^[0-5][0-9]$|^[0-9]$/,\n            placeholder: \"mm\",\n          },\n          { fixed: \" \" },\n          {\n            length: 2,\n            options: [\"AM\", \"PM\"],\n            regexp: /^[ap]m$|^[AP]M$|^[aApP]$/,\n            placeholder: \"ap\",\n          },\n        ]}\n        {...rest}\n      />\n    </FormFieldLabel>\n  );\n};\n","import React from \"react\";\nimport {\n  Calendar,\n  Box,\n  RadioButton,\n  Select,\n  Text,\n  Heading,\n  TextInput,\n} from \"grommet\";\nimport { FormFieldLabel } from \"../../../Custom/FormFieldLabel\";\nimport { TimeInput } from \"../../../Custom/TimeInput\";\nimport { FaCalendar } from \"react-icons/fa\";\nexport default function Schedule({ form, setForm, apikey, ...props }) {\n  let today = new Date();\n  let year = today.getFullYear();\n  let day = today.getDate();\n  let month = today.getMonth();\n  let bounds = [\n    today.toISOString(),\n    new Date(year + 5, month, day).toISOString(),\n  ];\n\n  const handleDate = (dates) => {\n    if (dates[0].length === 2) {\n      setForm({\n        ...form,\n        start: {\n          ...form.start,\n          date: dates[0][0],\n        },\n        end: {\n          ...form.end,\n          date: dates[0][1],\n        },\n      });\n    }\n  };\n  const handleTime = (e, time) => {\n    if (time === \"start\") {\n      setForm({\n        ...form,\n        start: {\n          ...form.start,\n          time: e.target.value,\n        },\n      });\n    }\n    if (time === \"end\") {\n      setForm({\n        ...form,\n        end: {\n          ...form.end,\n          time: e.target.value,\n        },\n      });\n    }\n  };\n  console.log(form);\n  return (\n    <Box pad=\"small\" width=\"100vw\">\n      <Heading color=\"status-unknown\" level=\"2\">\n        <FaCalendar style={{ verticalAlign: \"bottom\" }} />\n        <Text color={{ light: \"dark-1\", dark: \"light-2\" }} size=\"xlarge\">\n          {\" \"}\n          Schedule\n        </Text>\n      </Heading>\n      <Box\n        margin={{\n          left: \"large\",\n          top: \"small\",\n          right: \"small\",\n          bottom: \"small\",\n        }}\n      >\n        <FormFieldLabel\n          pad={true}\n          help={\n            <Box\n              pad=\"medium\"\n              margin=\"small\"\n              background={{ light: \"light-4\", dark: \"dark-4\" }}\n            >\n              <RadioButton\n                name=\"single\"\n                label={\n                  <Box margin=\"xxsmall\">\n                    <Text size=\"small\">\n                      <Text size=\"small\" weight=\"bold\">\n                        Single occurrence\n                      </Text>{\" \"}\n                      - happens once and can last multiple days\n                    </Text>\n                  </Box>\n                }\n                checked={!form.series}\n                onChange={(event) => setForm({ ...form, series: false })}\n                {...props}\n              />\n              <RadioButton\n                label={\n                  <Box margin=\"xxsmall\">\n                    <Text size=\"small\">\n                      <Text size=\"small\" weight=\"bold\">\n                        Recurring events\n                      </Text>{\" \"}\n                      - repeats or occurs more than once\n                    </Text>\n                  </Box>\n                }\n                name=\"series\"\n                checked={form.series}\n                onChange={(event) => setForm({ ...form, series: true })}\n                {...props}\n              />{\" \"}\n            </Box>\n          }\n        >\n          {!form.series ? (\n            <Box justify=\"around\" margin=\"small\" direction=\"row\">\n              <Calendar\n                bounds={bounds}\n                size=\"medium\"\n                onSelect={handleDate}\n                range\n              />\n              <Box pad=\"small\" justify=\"center\">\n                <TimeInput\n                  label=\"Start Time:\"\n                  value={form.start.time}\n                  onChange={(e) => handleTime(e, \"start\")}\n                  required\n                />\n                <TimeInput\n                  label=\"End Time:\"\n                  value={form.end.time}\n                  onChange={(e) => handleTime(e, \"end\")}\n                  required\n                />\n              </Box>\n            </Box>\n          ) : (\n            <Box justify=\"center\" margin=\"small\" direction=\"row\">\n              <Calendar bounds={bounds} size=\"medium\" range />\n              <Box pad=\"small\" justify=\"center\">\n                <TimeInput\n                  label=\"Start Time:\"\n                  value={form.start.time}\n                  onChange={(e) => handleTime(e, \"start\")}\n                  required\n                />\n                <TimeInput\n                  label=\"End Time:\"\n                  value={form.end.time}\n                  onChange={(e) => handleTime(e, \"end\")}\n                  required\n                />\n                <FormFieldLabel label=\"Occurs:\">\n                  <Select\n                    value={form.recurrence.occurs}\n                    options={[\"Daily\", \"Weekly\", \"Monthly\"]}\n                    onChange={({ option }) =>\n                      setForm({\n                        ...form,\n                        recurrence: {\n                          ...form.recurrence,\n                          occurs: option,\n                        },\n                      })\n                    }\n                  />\n                </FormFieldLabel>\n                <FormFieldLabel\n                  info={\n                    `Event repeats ` +\n                    form.recurrence.times +\n                    (form.recurrence.times > 1 ? \" times.\" : \" time.\")\n                  }\n                >\n                  <TextInput\n                    value={form.recurrence.times}\n                    onChange={(e) =>\n                      setForm({\n                        ...form,\n                        recurrence: {\n                          ...form.recurrence,\n                          times: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </FormFieldLabel>\n              </Box>\n            </Box>\n          )}\n        </FormFieldLabel>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { Box, TextArea, Heading, Text } from \"grommet\";\nimport { FaReadme } from \"react-icons/fa\";\nimport { FormFieldLabel } from \"../../../Custom/FormFieldLabel\";\n\nclass Description extends React.Component {\n  state = {\n    editor: \"\",\n  };\n  handleEditorChange = (e) => {\n    console.log(e.target.getContent());\n    this.setState({ editor: e.target.getContent() });\n    console.log(this.state);\n  };\n\n  render() {\n    return (\n      <Box pad=\"small\" width=\"100vw\">\n        <Heading color={{ light: \"light-6\", dark: \"dark-6\" }} level=\"2\">\n          <FaReadme style={{ verticalAlign: \"bottom\" }} />\n          <Text color={{ light: \"dark-1\", dark: \"light-1\" }} size=\"xlarge\">\n            {\" \"}\n            Basic Info\n          </Text>\n        </Heading>\n        <Box margin=\"small\">\n          <FormFieldLabel\n            help=\"Summary\"\n            info={\n              <Box align=\"end\">\n                <Text size=\"small\"> / 140</Text>\n              </Box>\n            }\n          >\n            <TextArea\n              placeholder=\"Write a short event summary to get attendees excited\"\n              size=\"xsmall\"\n              plain\n              resize={false}\n            />\n          </FormFieldLabel>\n        </Box>\n        <Box margin=\"small\">\n          <Editor\n            apiKey=\"l4239s08cwmf7d2qxig6hsvhyihcglbothx4eb7vkgtlxkic\"\n            initialValue=\"\"\n            init={{\n              height: 400,\n              resize: false,\n              menubar: false,\n              plugins: [\n                \"advlist autolink lists link image\",\n                \"charmap print preview anchor help\",\n                \"searchreplace visualblocks code\",\n                \"insertdatetime media table paste wordcount\",\n              ],\n              toolbar:\n                \"undo redo | formatselect | bold italic | bullist numlist\",\n            }}\n            onChange={this.handleEditorChange}\n          />\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Description;\n","import React from \"react\";\nimport { Box, TextArea } from \"grommet\";\nimport { FormFieldLabel } from \"../../../Custom/FormFieldLabel\";\n\nconst Tickets = (props) => {\n  return (\n    <Box pad=\"small\" width=\"100vw\">\n      Tickets\n    </Box>\n  );\n};\n\nexport default Tickets;\n","import React, { useState } from \"react\";\nimport { Box, Form } from \"grommet\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Queries from \"../../../graphql/queries\";\nimport Tabs from \"../../Custom/tabs\";\nimport BasicInfo from \"./FormComponents/BasicInfo\";\nimport Schedule from \"./FormComponents/Schedule\";\nimport Description from \"./FormComponents/Description\";\nimport Tickets from \"./FormComponents/Tickets\";\n\nconst { FETCH_USER } = Queries;\n\nlet defaultFormState = {\n  title: \"\",\n  location: \"Venue\",\n  category: \"Category\",\n  subcategory: \"subcategory\",\n  type: \"Type\",\n  start: {\n    date: new Date().toISOString(),\n    time: \"\",\n  },\n  end: {\n    date: new Date().toISOString(),\n    time: \"\",\n  },\n  series: false,\n  recurrence: {\n    times: 1,\n    occurs: \"Daily\",\n  },\n};\nfunction EventForm({ userId }) {\n  const [form, setForm] = useState(defaultFormState);\n  const { loading, data, error } = useQuery(FETCH_USER, {\n    variables: {\n      userId,\n    },\n  });\n  if (loading) return <Box width=\"100vw\">...loading</Box>;\n  if (error) {\n    console.log(error);\n    return null;\n  }\n  let { user } = data;\n  let { apikeys } = user;\n  let key = apikeys[0];\n  return (\n    <Form value={form}>\n      <Tabs form={form} setForm={setForm}>\n        <Box label=\"Basic Info\">\n          <BasicInfo form={form} setForm={setForm} apikey={key} />\n        </Box>\n        <Box label=\"Schedule\">\n          <Schedule form={form} setForm={setForm} apikey={key} />\n        </Box>\n        <Box label=\"Description\">\n          <Description form={form} setForm={setForm} apikey={key} />\n        </Box>\n        <Box label=\"Tickets\">\n          <Tickets />\n        </Box>\n      </Tabs>\n    </Form>\n  );\n}\n\nexport default EventForm;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport SidePanel from \"../Layout/Side/SidePanel\";\nimport Pending from \"../Layout/Side/Pending\";\nimport EventForm from \"../Layout/Main/EventForm\";\nimport Queries from \"../../graphql/queries\";\nimport styled from \"styled-components\";\nimport { Box } from \"grommet\";\n\nlet MainBox = styled(Box)`\n  .open {\n    opacity: 1;\n    height: 98%;\n    width: 400px;\n    transform: translateX(2%);\n    transition: 0.25s ease-out;\n  }\n  .closed {\n    opacity: 0;\n    transition: 0.2s ease-in;\n    width: 0;\n    height: 98%;\n    transform: translateX(-130%);\n  }\n  .here {\n    opacity: 1;\n    transition: 0.25s ease-out;\n  }\n  .gone {\n    opacity: 0;\n  }\n`;\nconst { FETCH_USER_ID } = Queries;\n\nfunction EventTool({ sidePanel, pending, ...props }) {\n  const { data, error } = useQuery(FETCH_USER_ID);\n  if (error) return <h3>Error: {error.message}</h3>;\n  return (\n    <Box height={{ min: \"92vh\" }} direction=\"column\">\n      <MainBox\n        style={{ position: \"relative\" }}\n        height=\"100vh\"\n        direction=\"row\"\n        justify=\"start\"\n        align=\"start\"\n      >\n        <Box elevation=\"small\" className={sidePanel ? \"open\" : \"closed\"}>\n          <SidePanel id={data.userId} history={props.history} />\n        </Box>\n        <Box\n          style={{\n            transform: \"translateX(-50%)\",\n            position: \"absolute\",\n            zIndex: \"1\",\n            top: \"15%\",\n            left: \"50%\",\n          }}\n          pad=\"small\"\n          background={{ dark: \"dark-6\", light: \"light-6\" }}\n          elevation=\"small\"\n          className={pending ? \"here\" : \"gone\"}\n        >\n          <Pending />\n        </Box>\n        <Box height=\"100%\" width=\"100%\" direction=\"column\">\n          <EventForm userId={data.userId} />\n        </Box>\n      </MainBox>\n    </Box>\n  );\n}\n\nexport default EventTool;\n","import React, { useState } from \"react\";\nimport AuthRoute from \"../util/route_util\";\nimport Login from \"./Pages/Login\";\nimport HeaderPanel from \"./Layout/Header/Header\";\nimport EventTool from \"./Pages/EventTool\";\nimport { grommet, Grommet, Box } from \"grommet\";\nimport { deepMerge } from \"grommet/utils\";\n\nconst theme = deepMerge(grommet, {\n  defaultMode: \"light\",\n  global: {\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n  },\n});\n\nfunction App(props) {\n  const [sidePanel, setSidePanel] = useState(false);\n  const [pending, setPending] = useState(false);\n  const [mode, setMode] = useState(false);\n  return (\n    <Grommet theme={theme} themeMode={mode ? \"dark\" : \"light\"}>\n      <HeaderPanel\n        mode={mode}\n        setMode={setMode}\n        sidePanel={sidePanel}\n        setSidePanel={setSidePanel}\n        pending={pending}\n        setPending={setPending}\n      />\n      <Box\n        background={{ light: \"light-2\", dark: \"dark-1\" }}\n        style={{ transition: \"0.25s ease-out\" }}\n        tag=\"main\"\n        direction=\"column\"\n        align=\"center\"\n        justify=\"start\"\n        height=\"92vh\"\n        {...props}\n      >\n        <AuthRoute exact path=\"/login\" component={Login} routeType=\"auth\" />\n        <AuthRoute\n          exact\n          path=\"/\"\n          component={EventTool}\n          pending={pending}\n          sidePanel={sidePanel}\n          routeType=\"protected\"\n        />\n      </Box>\n    </Grommet>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink } from \"apollo-link\";\n\nimport Mutations from \"./graphql/mutations\";\nconst { VERIFY_USER } = Mutations;\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: (object) => object._id || null,\n});\n\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message));\n});\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:5000/graphql\",\n  headers: {\n    authorization: localStorage.getItem(\"auth-token\"),\n  },\n});\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([errorLink, httpLink]),\n  cache,\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log(\"graphQLErrors\", graphQLErrors);\n    console.log(\"networkError\", networkError);\n  },\n  resolvers: {},\n});\n\nconst token = localStorage.getItem(\"auth-token\");\nconst userId = localStorage.getItem(\"userId\");\ncache.writeData({\n  data: {\n    isLoggedIn: Boolean(token),\n    userId: userId,\n  },\n});\n\nif (token) {\n  client\n    .mutate({ mutation: VERIFY_USER, variables: { token } })\n    .then(({ data }) => {\n      cache.writeData({\n        data: {\n          isLoggedIn: data.verifyUser.loggedIn,\n          userId: data.verifyUser.id,\n        },\n      });\n    });\n}\n\nconst Root = () => (\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ApolloProvider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}