{"version":3,"sources":["serviceWorker.js","graphql/queries.js","util/route_util.js","graphql/mutations.js","components/AccountList.js","components/FormFieldLabel.js","components/SearchDropdown.js","components/Spinner.js","components/TimeInput.js","components/LoginForm.js","Login.js","header/Header.js","Schedule.js","eventtool/AccountManager.js","eventtool/BasicInfo.js","eventtool/Schedule.js","eventtool/Description.js","eventtool/Tickets.js","eventtool/EventForm.js","eventtool/EventTool.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","headers","then","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","IS_LOGGED_IN","gql","FETCH_USER_ID","FETCH_USER","FETCH_ACCOUNTS","FETCH_ACCOUNT","FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES","Queries","AuthRoute","Component","component","path","exact","routeType","rest","query","data","render","props","isLoggedIn","to","LOGIN_USER","REGISTER_USER","VERIFY_USER","PUSH_API_KEY","DELETE_API_KEY","SUBMIT_FORM","Mutations","AccountCard","apikey","id","userId","selectedKey","setSelectedKey","useState","hover","sethover","useMutation","onError","err","message","split","update","client","deleteAPIkey","readQuery","variables","writeQuery","user","apikeys","deleteAPI","useQuery","loading","style","color","fontWeight","account","Box","focusIndicator","width","key","direction","border","size","background","light","dark","as","cursor","onClick","pad","Text","truncate","weight","name","email","padding","FormTrash","onMouseEnter","onMouseLeave","e","preventDefault","AccountList","length","Grid","columns","count","margin","gap","map","FormFieldLabel","required","label","FormField","SearchInputContext","createContext","allContentPartners","SearchDropdown","selectedContentPartners","setSelectedContentPartners","contentPartners","setContentPartners","searching","setSearching","searchQuery","setSearchQuery","selectRef","useRef","useEffect","filterContentPartners","filter","s","toLowerCase","setTimeout","renderOption","align","flex","CheckBox","tabIndex","checked","some","partner","onChange","Provider","Select","ref","closeOnChange","placeholder","searchPlaceholder","emptySearchMessage","multiple","value","left","vertical","round","justify","horizontal","minWidth","join","Button","onFocus","event","stopPropagation","current","focus","FormClose","height","undefined","selected","option","options","newSelectedPartners","seasonIndex","splice","push","selectedPartnerNames","sortedContentPartners","sort","p1","p2","p1Exists","includes","p2Exists","sortContentPartners","handleChange","onSearch","spinning","version","viewBox","fill","opacity","d","attributeName","type","from","dur","repeatCount","Spinner","TimeInput","MaskedInput","mask","regexp","fixed","LoginForm","setEmail","password","setPassword","action","demo","inputRef","i","string","int","setInterval","slice","click","clearInterval","Form","onSubmit","info","TextInput","icon","Mail","target","fontStyle","fontFamily","alignSelf","primary","Login","tabColors","setTabColors","React","index","setIndex","setError","onCompleted","login","token","localStorage","setItem","history","writeData","loggedIn","updateCache","Heading","level","userSelect","Tabs","activeIndex","onActive","nextIndex","nArray","Tab","title","HeaderPanel","responsive","pending","setPending","mode","setMode","eventClient","useApolloClient","logout","removeItem","Header","Menu","dropProps","top","items","textDecoration","plain","MainBox","styled","Pending","jobs","setRender","animation","onAnimationEnd","Table","TableHeader","TableRow","TableCell","scope","TableBody","job","date","Date","schedule","moment","format","AccountManager","open","setOpen","addApi","setAddApi","errorMessage","setErrorMessage","setApiKey","pushAPIkey","pushApi","Collapsible","a","BasicInfo","form","setForm","category","subcategory","categories","subcategories","obj","parent","types","orgs","organizations","Document","maxLength","MapLocation","Schedule","screenSize","today","year","getFullYear","day","getDate","month","getMonth","bounds","toISOString","handleTime","time","start","end","help","RadioButton","series","Calendar","range","recurrence","occurs","times","onSelect","dates","Description","editor","this","handleEditorChange","description","getContent","setState","Book","summary","TextArea","resize","apiKey","initialValue","init","menubar","plugins","toolbar","onBlur","Tickets","setSelected","quantity","price","num","ticket","setTicket","Ticket","disabled","position","Currency","tickets","DataTable","primaryKey","property","header","datum","overflow","hoverIndicator","defaultFormState","active_tab","EventForm","defaultKey","scheduleEvent","fetchPolicy","add","min","textAlign","Paragraph","EventTool","idError","idLoading","userData","userError","userLoading","theme","deepMerge","grommet","defaultMode","global","font","family","colors","brand","inactive","App","darkMode","setDarkMode","Grommet","themeMode","ResponsiveContext","Consumer","max","transition","tag","cache","InMemoryCache","dataIdFromObject","object","_id","errorLink","graphQLErrors","httpLink","createHttpLink","uri","authorization","getItem","persistCache","storage","ApolloClient","link","ApolloLink","networkError","resolvers","mutate","mutation","verifyUser","Root","WebFont","load","google","families","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.016479bf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import gql from \"graphql-tag\";\n\nexport default {\n  IS_LOGGED_IN: gql`\n    query IsUserLoggedIn {\n      isLoggedIn @client\n    }\n  `,\n  FETCH_USER_ID: gql`\n    query fetchUserId {\n      userId @client\n    }\n  `,\n  FETCH_USER: gql`\n    query fetchUser($userId: ID!) {\n      user(id: $userId) {\n        id\n        email\n        apikeys\n        jobs {\n          data\n          status\n          schedule\n        }\n      }\n    }\n  `,\n  FETCH_ACCOUNTS: gql`\n    query fetchAccounts($apikeys: [String!]) {\n      accounts(apikeys: $apikeys) {\n        id\n        first_name\n        last_name\n        apikey\n        name\n        email\n        is_public\n        image_id\n        organizations {\n          id\n          name\n        }\n      }\n    }\n  `,\n  FETCH_ACCOUNT: gql`\n    query fetchAccount($apikey: String!) {\n      account(apikey: $apikey) {\n        id\n        first_name\n        last_name\n        apikey\n        name\n        email\n        is_public\n        image_id\n        organizations {\n          id\n          name\n        }\n      }\n    }\n  `,\n  FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES: gql`\n    query fetchCategories($apikey: String!) {\n      categories(apikey: $apikey) {\n        name\n        id\n      }\n      subcategories(apikey: $apikey) {\n        name\n        id\n        parent\n      }\n      types(apikey: $apikey) {\n        name\n        id\n      }\n      account(apikey: $apikey) {\n        name\n        organizations {\n          id\n          name\n        }\n      }\n    }\n  `,\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport Queries from \"../graphql/queries\";\nconst { IS_LOGGED_IN } = Queries;\n\nconst AuthRoute = ({\n  component: Component,\n  path,\n  exact,\n  routeType,\n  ...rest\n}) => (\n  <Query query={IS_LOGGED_IN}>\n    {({ data }) => {\n      if (routeType === \"auth\") {\n        return (\n          <Route\n            path={path}\n            exact={exact}\n            render={(props) =>\n              !data.isLoggedIn ? (\n                <Component {...props} {...rest} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          />\n        );\n      } else {\n        return (\n          <Route\n            {...rest}\n            render={(props) =>\n              data.isLoggedIn ? (\n                <Component {...props} {...rest} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n        );\n      }\n    }}\n  </Query>\n);\nexport default AuthRoute;\n","import gql from \"graphql-tag\";\nexport default {\n  LOGIN_USER: gql`\n    mutation LoginUser($email: String!, $password: String!) {\n      login(email: $email, password: $password) {\n        id\n        token\n        loggedIn\n      }\n    }\n  `,\n  REGISTER_USER: gql`\n    mutation RegisterUser($email: String!, $password: String!) {\n      register(email: $email, password: $password) {\n        id\n        token\n        loggedIn\n      }\n    }\n  `,\n  VERIFY_USER: gql`\n    mutation VerifyUser($token: String!) {\n      verifyUser(token: $token) {\n        id\n        loggedIn\n      }\n    }\n  `,\n  PUSH_API_KEY: gql`\n    mutation pushAPIkey($id: ID!, $apikey: String!) {\n      pushAPIkey(id: $id, apikey: $apikey) {\n        id\n        email\n        apikeys\n      }\n    }\n  `,\n  DELETE_API_KEY: gql`\n    mutation deleteAPIkey($id: ID!, $apikey: String!) {\n      deleteAPIkey(id: $id, apikey: $apikey) {\n        id\n        email\n        apikeys\n      }\n    }\n  `,\n  SUBMIT_FORM: gql`\n    mutation submitForm($id: ID!, $date: String!, $data: String!) {\n      scheduleEvent(id: $id, date: $date, data: $data) {\n        id\n        email\n        apikeys\n        jobs {\n          data\n          status\n          schedule\n        }\n      }\n    }\n  `,\n};\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Queries from \"../graphql/queries\";\nimport Mutations from \"../graphql/mutations\";\nimport { Box, Text, Grid } from \"grommet\";\nimport { FormTrash } from \"grommet-icons\";\nconst { DELETE_API_KEY } = Mutations;\nconst { FETCH_ACCOUNT, FETCH_USER } = Queries;\n\nfunction AccountCard({ apikey, id, userId, selectedKey, setSelectedKey }) {\n  const [hover, sethover] = useState(false);\n  const [deleteAPI] = useMutation(DELETE_API_KEY, {\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      console.log(message);\n    },\n    update(client, { data: { deleteAPIkey } }) {\n      let data = client.readQuery({\n        query: FETCH_USER,\n        variables: { userId },\n      });\n      client.writeQuery({\n        query: FETCH_USER,\n        variables: { userId },\n        data: {\n          user: {\n            ...data.user,\n            apikeys: deleteAPIkey.apikeys,\n          },\n        },\n      });\n    },\n  });\n  const { loading, data, error } = useQuery(FETCH_ACCOUNT, {\n    variables: {\n      apikey,\n    },\n  });\n  if (error)\n    return (\n      <h3 style={{ color: \"red\", fontWeight: \"bolder\" }}>\n        {error.message.split(\":\")[1]}\n      </h3>\n    );\n  if (loading) return null;\n  let { account } = data;\n  return (\n    <Box\n      focusIndicator={false}\n      width=\"100vw\"\n      key={id}\n      direction=\"row\"\n      border={\n        apikey === selectedKey\n          ? {\n              color: \"brand\",\n              size: \"small\",\n            }\n          : {\n              size: \"small\",\n            }\n      }\n      background={{ light: \"light-2\", dark: \"dark-1\" }}\n      as=\"button\"\n      style={{ cursor: \"pointer\" }}\n      onClick={() => setSelectedKey(apikey)}\n    >\n      <Box pad=\"xsmall\" direction=\"column\">\n        <Text size=\"xsmall\" truncate>\n          <Text size=\"xsmall\" weight=\"bold\">\n            Account Name:\n          </Text>{\" \"}\n          {account.name}\n        </Text>\n        <Text size=\"xsmall\" truncate>\n          <Text size=\"xsmall\" weight=\"bold\">\n            Email:\n          </Text>{\" \"}\n          {account.email}\n        </Text>\n        <Text size=\"xsmall\" truncate>\n          <Text size=\"xsmall\" weight=\"bold\">\n            API_KEY:\n          </Text>{\" \"}\n          {account.apikey}\n        </Text>\n      </Box>\n      <div style={{ width: \"25px\", padding: \"3px\" }}>\n        <FormTrash\n          onMouseEnter={() => sethover(true)}\n          onMouseLeave={() => sethover(false)}\n          onClick={(e) => {\n            e.preventDefault();\n            deleteAPI({\n              variables: {\n                id: userId,\n                apikey,\n              },\n            });\n          }}\n          color={hover ? \"status-error\" : \"status-disabled\"}\n        />\n      </div>\n    </Box>\n  );\n}\n\nfunction AccountList({ user, selectedKey, setSelectedKey }) {\n  if (user.apikeys.length > 0) {\n    return (\n      <Grid\n        columns={{\n          count: user.apikeys.length % 4,\n          size: \"xsmall\",\n        }}\n        margin=\"small\"\n        gap=\"small\"\n      >\n        {user.apikeys.map((apikey, id) => (\n          <AccountCard\n            key={id}\n            apikey={apikey}\n            userId={user.id}\n            id={id}\n            selectedKey={selectedKey}\n            setSelectedKey={setSelectedKey}\n          />\n        ))}\n      </Grid>\n    );\n  } else {\n    return (\n      <Box width=\"100vw\">\n        <Box margin=\"medium\">\n          <Text pad=\"small\">\n            Please add the secret keys from the accounts you want to post with.\n          </Text>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default AccountList;\n","import React from \"react\";\nimport { FormField, Box, Text } from \"grommet\";\n\nexport const FormFieldLabel = props => {\n  const { required, label, ...rest } = props;\n  return (\n    <FormField\n      label={\n        required ? (\n          <Box direction=\"row\">\n            <Text>{label}</Text>\n            <Text color=\"status-critical\">*</Text>\n          </Box>\n        ) : (\n          label\n        )\n      }\n      required={required}\n      {...rest}\n    ></FormField>\n  );\n};\n","import React, { useRef, useState, useEffect, createContext } from \"react\";\nimport { FormClose } from \"grommet-icons\";\nimport { Box, Button, CheckBox, Select, Text } from \"grommet\";\nimport { FormFieldLabel } from \"./FormFieldLabel\";\nconst SearchInputContext = createContext({});\n//#TODO\n// CREATE GRAPHQL QUERY to GRAB ALL account venus.\n\nconst allContentPartners = [\n  {\n    name: \"Location 1\",\n    id: \"32131232\",\n  },\n  {\n    name: \"Location 2\",\n    id: \"32131232\",\n  },\n  {\n    name: \"Location 3\",\n    id: \"32131242\",\n  },\n  {\n    name: \"Location 4\",\n    id: \"32131252\",\n  },\n  {\n    name: \"Location 5\",\n    id: \"32131262\",\n  },\n  {\n    name: \"Location 6\",\n    id: \"32131272\",\n  },\n  {\n    name: \"Location 6\",\n    id: \"32131272\",\n  },\n  {\n    name: \"Location 6\",\n    id: \"32131272\",\n  },\n  {\n    name: \"Location 6\",\n    id: \"32131272\",\n  },\n  {\n    name: \"Location 6\",\n    id: \"32131272\",\n  },\n  {\n    name: \"Location 6\",\n    id: \"32131272\",\n  },\n];\n\nconst SearchDropdown = () => {\n  const [selectedContentPartners, setSelectedContentPartners] = useState([]);\n  const [contentPartners, setContentPartners] = useState(allContentPartners);\n  const [searching, setSearching] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const selectRef = useRef();\n\n  const clearContentPartners = () => {\n    setSelectedContentPartners([]);\n  };\n\n  useEffect(() => {\n    const filterContentPartners = allContentPartners.filter(\n      (s) => s.name.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0\n    );\n\n    setTimeout(() => {\n      setSearching(false);\n      setContentPartners(filterContentPartners);\n    }, 500);\n  }, [searching, searchQuery]);\n\n  const renderOption = ({ name }) => (\n    <Box direction=\"row\" align=\"center\" pad=\"small\" flex={false}>\n      <CheckBox\n        tabIndex=\"-1\"\n        checked={selectedContentPartners.some(\n          (partner) => partner.name === name\n        )}\n        label={<Text size=\"small\">{name}</Text>}\n        onChange={() => {}}\n      />\n    </Box>\n  );\n\n  const renderContentPartners = () => (\n    <Box\n      direction=\"row\"\n      gap=\"xsmall\"\n      pad={{ left: \"small\", vertical: \"small\" }}\n      align=\"center\"\n      flex\n    >\n      <Box\n        background=\"brand\"\n        round=\"medium\"\n        align=\"center\"\n        justify=\"center\"\n        pad={{ horizontal: \"xsmall\" }}\n        style={{ minWidth: \"21px\" }}\n      >\n        <Text size=\"small\">{selectedContentPartners.length}</Text>\n      </Box>\n      <Box flex>\n        <Text size=\"small\" truncate>\n          {selectedContentPartners.map(({ name }) => name).join(\", \")}\n        </Text>\n      </Box>\n      <Button\n        href=\"#\"\n        onFocus={(event) => event.stopPropagation()}\n        onClick={(event) => {\n          event.preventDefault();\n          event.stopPropagation();\n          clearContentPartners();\n          selectRef.current.focus();\n        }}\n      >\n        <Box background=\"accent-4\" round=\"full\">\n          <FormClose style={{ width: \"12px\", height: \"12px\" }} />\n        </Box>\n      </Button>\n    </Box>\n  );\n\n  const sortContentPartners = (selectedPartnerNames) => {\n    return (p1, p2) => {\n      const p1Exists = selectedPartnerNames.includes(p1.name);\n      const p2Exists = selectedPartnerNames.includes(p2.name);\n\n      if (!p1Exists && p2Exists) {\n        return 1;\n      }\n      if (p1Exists && !p2Exists) {\n        return -1;\n      }\n      if (p1.name.toLowerCase() < p2.name.toLowerCase()) {\n        return -1;\n      }\n      return 1;\n    };\n  };\n\n  const handleChange = (option) => {\n    const newSelectedPartners = [...selectedContentPartners];\n    const seasonIndex = newSelectedPartners\n      .map(({ name }) => name)\n      .indexOf(option.name);\n    if (seasonIndex >= 0) {\n      newSelectedPartners.splice(seasonIndex, 1);\n    } else {\n      newSelectedPartners.push(option);\n    }\n    const selectedPartnerNames = newSelectedPartners.map(({ name }) => name);\n    const sortedContentPartners = [...allContentPartners].sort(\n      sortContentPartners(selectedPartnerNames)\n    );\n    setSelectedContentPartners(newSelectedPartners);\n    setContentPartners(sortedContentPartners);\n  };\n\n  return (\n    <SearchInputContext.Provider>\n      <FormFieldLabel>\n        <Select\n          ref={selectRef}\n          closeOnChange={false}\n          placeholder=\"Select Content Partners\"\n          searchPlaceholder=\"Search Content Partners\"\n          emptySearchMessage=\"No partners found\"\n          multiple\n          value={\n            selectedContentPartners.length ? renderContentPartners() : undefined\n          }\n          selected={selectedContentPartners.map((option) =>\n            contentPartners.indexOf(option)\n          )}\n          options={contentPartners}\n          onChange={({ option }) => handleChange(option)}\n          onSearch={(query) => {\n            setSearching(true);\n            setSearchQuery(query);\n          }}\n        >\n          {renderOption}\n        </Select>\n      </FormFieldLabel>\n    </SearchInputContext.Provider>\n  );\n};\n\nexport default SearchDropdown;\n","import React from \"react\";\nimport { Box } from \"grommet\";\n\nconst spinning = (\n  <svg\n    version=\"1.1\"\n    viewBox=\"0 0 32 32\"\n    width=\"68px\"\n    height=\"68px\"\n    fill=\"#f05537\"\n  >\n    <path\n      opacity=\".25\"\n      d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\"\n    />\n    <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 16 16\"\n        to=\"360 16 16\"\n        dur=\"0.8s\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </svg>\n);\n\nexport const Spinner = () => (\n  <Box align=\"center\" justify=\"center\">\n    {spinning}\n  </Box>\n);\n\nexport default Spinner;\n","import React from \"react\";\nimport { MaskedInput } from \"grommet\";\nimport { FormFieldLabel } from \"./FormFieldLabel\";\n\nexport const TimeInput = (props) => {\n  let { label, required, ...rest } = props;\n  return (\n    <FormFieldLabel label={label} required={required}>\n      <MaskedInput\n        mask={[\n          {\n            length: [1, 2],\n            regexp: /^1[0,1-2]$|^0?[1-9]$|^0$/,\n            placeholder: \"Hour\",\n          },\n          { fixed: \":\" },\n          {\n            length: 2,\n            options: [\"00\", \"15\", \"30\", \"45\"],\n            regexp: /^[0-5][0-9]$|^[0-9]$/,\n            placeholder: \"Min\",\n          },\n          { fixed: \" \" },\n          {\n            length: 2,\n            options: [\"AM\", \"PM\"],\n            regexp: /^[ap]m$|^[AP]M$|^[aApP]$/,\n            placeholder: \"AM/PM\",\n          },\n        ]}\n        {...rest}\n      />\n    </FormFieldLabel>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { Box, Form, FormField, TextInput, Button, Text } from \"grommet\";\nimport { Mail } from \"grommet-icons\";\n\nexport const LoginForm = ({\n  email,\n  setEmail,\n  password,\n  setPassword,\n  error,\n  action,\n  demo,\n}) => {\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (demo) {\n      console.log(\"hello\");\n      let i = 0;\n      let string = \"demo@demo.com123456\";\n      const int = setInterval(() => {\n        if (i <= 13) {\n          setEmail(string.slice(0, i));\n        } else if (i < string.length && i > 13) {\n          setPassword(string.slice(13, i + 1));\n        } else {\n          inputRef.current.click();\n          clearInterval(int);\n        }\n        i++;\n        return () => {\n          clearInterval(int);\n        };\n      }, 100);\n    }\n  }, [setEmail, setPassword, demo]);\n  return (\n    <Form\n      align=\"start\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        action({\n          variables: {\n            email,\n            password,\n          },\n        });\n      }}\n    >\n      <FormField info=\"Email Address\">\n        <TextInput\n          icon={<Mail />}\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"example@example.com\"\n        />\n      </FormField>\n      <FormField info=\"Password\">\n        <TextInput\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </FormField>\n      <Box style={{ color: \"Red\" }} align=\"center\" height=\"20px\">\n        <Text\n          style={{ fontStyle: \"italic\", fontFamily: \"Fira Sans\" }}\n          size=\"large\"\n        >\n          {error}\n        </Text>\n      </Box>\n      <Box>\n        <Button\n          ref={inputRef}\n          size=\"xlarge\"\n          alignSelf=\"end\"\n          type=\"submit\"\n          primary\n          label=\"Submit\"\n        />\n      </Box>\n    </Form>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Mutations from \"./graphql/mutations\";\nimport { Box, Heading, Tabs, Tab } from \"grommet\";\nimport { LoginForm } from \"./components\";\n\nconst { LOGIN_USER, REGISTER_USER } = Mutations;\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [tabColors, setTabColors] = useState([\"brand\", \"plain\", \"plain\"]);\n  const [index, setIndex] = React.useState(0);\n  const onActive = (nextIndex) => {\n    let nArray = [...tabColors];\n    nArray[index] = \"plain\";\n    nArray[nextIndex] = \"brand\";\n    setTabColors([...nArray]);\n    setIndex(nextIndex);\n  };\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [login] = useMutation(LOGIN_USER, {\n    onCompleted: (data) => {\n      const { token, id } = data.login;\n      localStorage.setItem(\"auth-token\", token);\n      localStorage.setItem(\"userId\", id);\n      props.history.push(\"/\");\n    },\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      setError(message);\n    },\n    update: (client, data) => {\n      updateCache(client, data);\n    },\n  });\n\n  const [register] = useMutation(REGISTER_USER, {\n    onCompleted: (data) => {\n      login({ variables: { email, password } });\n    },\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      setError(message + \"hello\");\n    },\n  });\n\n  function updateCache(client, { data }) {\n    client.writeData({\n      data: {\n        isLoggedIn: data.login.loggedIn,\n        userId: data.login.id,\n      },\n    });\n  }\n\n  return (\n    <Box width=\"100vw\" height=\"100vh\" align=\"center\" justify=\"center\">\n      <Heading\n        level=\"1\"\n        size=\"large\"\n        color=\"brand\"\n        style={{ userSelect: \"none\", fontFamily: \"Playball\" }}\n      >\n        Event Tool\n      </Heading>\n      <Tabs activeIndex={index} onActive={onActive} pad=\"small\" width=\"70vw\">\n        <Tab\n          title={\n            <Heading color={tabColors[0]} level=\"3\" weight=\"bold\">\n              Login\n            </Heading>\n          }\n          pad=\"small\"\n        >\n          <LoginForm\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            error={error}\n            action={login}\n          />\n        </Tab>\n        <Tab\n          title={\n            <Heading color={tabColors[1]} level=\"3\" weight=\"bold\">\n              Register\n            </Heading>\n          }\n        >\n          <LoginForm\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            error={error}\n            action={register}\n          />\n        </Tab>\n        <Tab\n          title={\n            <Heading color={tabColors[2]} level=\"3\" weight=\"bold\">\n              Demo\n            </Heading>\n          }\n          align=\"center\"\n          pad=\"small\"\n        >\n          <LoginForm\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            error={error}\n            action={login}\n            demo\n          />\n        </Tab>\n      </Tabs>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Queries from \"../graphql/queries\";\nimport { Box, Heading, Header, CheckBox, Button, Menu } from \"grommet\";\nimport { Menu as MenuIcon } from \"grommet-icons\";\nconst { IS_LOGGED_IN } = Queries;\n\nconst HeaderPanel = ({ responsive, pending, setPending, mode, setMode }) => {\n  const { data, error } = useQuery(IS_LOGGED_IN);\n  const eventClient = useApolloClient();\n  if (error) return <h3>Error: {error.message}</h3>;\n  const logout = (e) => {\n    e.preventDefault();\n    localStorage.removeItem(\"auth-token\");\n    localStorage.removeItem(\"userId\");\n    eventClient.writeData({\n      data: {\n        isLoggedIn: false,\n        userId: null,\n      },\n    });\n  };\n\n  return responsive === \"small\" ? (\n    <Header>\n      <Menu\n        alignSelf=\"center\"\n        dropProps={{ align: { top: \"bottom\", left: \"left\" } }}\n        icon={<MenuIcon />}\n        pad=\"small\"\n        items={\n          data.isLoggedIn\n            ? [\n                {\n                  label: (\n                    <CheckBox\n                      background={{\n                        light: \"light-2\",\n                        dark: \"dark-2\",\n                      }}\n                      checked={pending}\n                      label=\"Scheduled Events\"\n                    />\n                  ),\n                  onClick: () => setPending(!pending),\n                },\n                {\n                  label: \"Logout\",\n                  onClick: (e) => logout(e),\n                },\n              ]\n            : []\n        }\n      />\n    </Header>\n  ) : (\n    <Header>\n      {data.isLoggedIn ? (\n        <>\n          <Box pad=\"medium\" direction=\"row\" align=\"center\">\n            <Heading\n              level=\"1\"\n              color=\"brand\"\n              style={{ userSelect: \"none\", fontFamily: \"Playball\" }}\n            >\n              Event Tool\n            </Heading>\n          </Box>\n          <Box direction=\"row\" gap=\"small\">\n            <Box gap=\"small\" margin=\"medium\" direction=\"row\">\n              <Button\n                onClick={() => {\n                  setPending(!pending);\n                }}\n                style={{\n                  fontFamily: \"Fira Sans\",\n                  textDecoration: pending ? \"underline\" : \"none\",\n                }}\n              >\n                Scheduled Events\n              </Button>\n            </Box>\n            <Box gap=\"small\" margin=\"medium\" direction=\"row\">\n              <Button\n                style={{\n                  fontFamily: \"Fira Sans\",\n                }}\n                weight=\"bold\"\n                plain\n                label=\"Logout\"\n                onClick={logout}\n              />\n            </Box>\n          </Box>\n        </>\n      ) : null}\n    </Header>\n  );\n};\n\nexport default HeaderPanel;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n} from \"grommet\";\n\nlet MainBox = styled(Box)`\n  @keyframes fadeIn {\n    0% {\n      transition: ease-in;\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes fadeOut {\n    0% {\n      opacity: 1;\n      transition: ease-out;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n`;\nconst Pending = ({ user, pending }) => {\n  let { jobs } = user;\n  const [render, setRender] = useState(pending);\n  useEffect(() => {\n    if (pending) setRender(true);\n  }, [pending]);\n\n  const onAnimationEnd = () => {\n    if (!pending) setRender(false);\n  };\n\n  return (\n    render && (\n      <MainBox\n        width=\"93vw\"\n        pad=\"medium\"\n        style={{\n          animation: `${pending ? \"fadeIn\" : \"fadeOut\"} 1s`,\n        }}\n        onAnimationEnd={onAnimationEnd}\n      >\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableCell scope=\"col\" border=\"bottom\">\n                Date\n              </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                Status\n              </TableCell>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {jobs.map((job, index) => {\n              let date = new Date(job.schedule);\n              return (\n                <TableRow key={index}>\n                  <TableCell>\n                    {moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}\n                  </TableCell>\n                  <TableCell>{job.status}</TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </MainBox>\n    )\n  );\n};\n\nexport default Pending;\n","import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Queries from \"../graphql/queries\";\nimport Mutations from \"../graphql/mutations\";\nimport Accounts from \"../components/AccountList\";\nimport {\n  Box,\n  Button,\n  Form,\n  FormField,\n  TextInput,\n  Text,\n  Collapsible,\n  Heading,\n} from \"grommet\";\n\nconst { FETCH_USER } = Queries;\nconst { PUSH_API_KEY } = Mutations;\n\nfunction AccountManager({ user, selectedKey, setSelectedKey }) {\n  let { apikeys } = user;\n  const [open, setOpen] = useState(true);\n  const [addApi, setAddApi] = useState(false);\n  useEffect(() => {\n    setSelectedKey(apikeys[0]);\n  }, [apikeys, setSelectedKey]);\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  let [apikey, setApiKey] = useState(\"\");\n  const [pushApi] = useMutation(PUSH_API_KEY, {\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      setErrorMessage(<Text size=\"small\">{message}</Text>);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 10000);\n    },\n    update(client, { data: { pushAPIkey } }) {\n      client.writeQuery({\n        query: FETCH_USER,\n        variables: { userId: user.id },\n        data: {\n          user: {\n            ...user,\n            apikeys: pushAPIkey.apikeys,\n          },\n        },\n      });\n    },\n  });\n  return (\n    <Box pad=\"medium\" width=\"100vw\" justify=\"between\" flex>\n      <Button plain onClick={() => setOpen(!open)}>\n        <Heading\n          color={\n            open\n              ? \"brand\"\n              : {\n                  dark: \"light-1\",\n                  light: \"dark-1\",\n                }\n          }\n          level=\"3\"\n        >\n          Eventbrite Accounts\n        </Heading>\n      </Button>\n      <Collapsible open={open}>\n        <Accounts\n          user={user}\n          selectedKey={selectedKey}\n          setSelectedKey={setSelectedKey}\n        />\n        <Collapsible open={addApi}>\n          <Box margin=\"small\">\n            <Form\n              onSubmit={(e) => {\n                e.preventDefault();\n                pushApi({\n                  variables: {\n                    id: user.id,\n                    apikey,\n                  },\n                });\n                setApiKey(\"\");\n              }}\n            >\n              <FormField error={errorMessage} label=\"API Key\">\n                <TextInput\n                  onChange={(e) => setApiKey(e.target.value)}\n                  value={apikey}\n                  placeholder=\"2HFXXX2G....\"\n                />\n              </FormField>\n              <Button type=\"submit\" color=\"neutral-2\" label=\"Submit\" a />\n            </Form>\n          </Box>\n        </Collapsible>\n        <Box align=\"end\">\n          <Button\n            label=\"add account\"\n            size=\"medium\"\n            color=\"neutral-2\"\n            onClick={() => setAddApi(!addApi)}\n          />\n        </Box>\n      </Collapsible>\n    </Box>\n  );\n}\n\nexport default AccountManager;\n","import React, { useState } from \"react\";\nimport Search from \"../components/SearchDropdown\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Queries from \"../graphql/queries\";\nimport {\n  Box,\n  Heading,\n  Select,\n  TextInput,\n  Text,\n  Collapsible,\n  Button,\n} from \"grommet\";\nimport { Spinner } from \"../components\";\nimport { FormFieldLabel } from \"../components/FormFieldLabel\";\nimport { Document, MapLocation } from \"grommet-icons\";\n\nconst { FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES } = Queries;\n\nexport default function BasicInfo({ apikey, form, setForm }) {\n  const [open, setOpen] = useState(true);\n  let { title, location, category, subcategory, type } = form;\n  const { loading, data, error } = useQuery(\n    FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES,\n    {\n      variables: {\n        apikey,\n      },\n    }\n  );\n  if (loading)\n    return (\n      <Box height=\"100vh\" justify=\"center\" align=\"center\">\n        <Spinner />\n      </Box>\n    );\n  if (error) {\n    console.log(error);\n    return null;\n  }\n  let categories = data.categories.map(({ name }) => name);\n  let subcategories = data.subcategories\n    .filter((obj) => obj.parent === category)\n    .map(({ name }) => name);\n  let types = data.types.map(({ name }) => name);\n  let orgs = data.account.organizations.map(({ name, id }) => {\n    return name;\n  });\n  return (\n    <Box pad=\"medium\" width=\"100vw\" justify=\"between\" flex>\n      <Button plain onClick={() => setOpen(!open)}>\n        <Heading\n          color={\n            open\n              ? \"neutral-2\"\n              : {\n                  dark: \"light-1\",\n                  light: \"dark-1\",\n                }\n          }\n          level=\"2\"\n        >\n          {open ? \"-\" : \"+\"}{\" \"}\n          <Document\n            color={\n              open\n                ? \"neutral-2\"\n                : {\n                    dark: \"light-1\",\n                    light: \"dark-1\",\n                  }\n            }\n            size=\"medium\"\n          />{\" \"}\n          Basic Info\n        </Heading>\n      </Button>\n      <Collapsible open={open}>\n        <Box margin=\"small\">\n          <FormFieldLabel\n            margin=\"small\"\n            required\n            info={\n              <Box align=\"end\">\n                <Text size=\"small\">{title.length} / 70</Text>\n              </Box>\n            }\n            label=\"Event Title\"\n          >\n            <TextInput\n              maxLength=\"70\"\n              margin=\"small\"\n              value={title}\n              onChange={(e) => setForm({ ...form, title: e.target.value })}\n              placeholder=\"Be clear and descriptive\"\n            />\n          </FormFieldLabel>\n          <Box margin=\"small\" gap=\"small\" direction=\"row\">\n            <FormFieldLabel label=\"Type\">\n              <Select\n                placeholder=\"Conference\"\n                value={type}\n                onChange={({ option }) => setForm({ ...form, type: option })}\n                options={types}\n              />\n            </FormFieldLabel>\n            <FormFieldLabel label=\"Category\">\n              <Select\n                placeholder=\"Music\"\n                value={category}\n                onChange={({ option }) =>\n                  setForm({ ...form, category: option })\n                }\n                options={categories}\n              />\n            </FormFieldLabel>\n            {subcategories.length > 1 ? (\n              <FormFieldLabel label=\"Subcategory\">\n                <Select\n                  value={subcategory}\n                  onChange={({ option }) =>\n                    setForm({ ...form, subcategory: option })\n                  }\n                  options={subcategories}\n                />\n              </FormFieldLabel>\n            ) : null}\n          </Box>\n          <FormFieldLabel label=\"Organizer\" margin=\"small\">\n            <Select value={orgs[0]} options={orgs} />\n          </FormFieldLabel>\n        </Box>\n        <Heading level=\"2\">\n          <MapLocation /> Locations\n        </Heading>\n        <Box margin=\"small\">\n          <FormFieldLabel label=\"Venue\" margin=\"small\" required>\n            <Select\n              value={location}\n              onChange={({ option }) => setForm({ ...form, location: option })}\n              options={[\"Venue\", \"Online Event\", \"To Be Announced\"]}\n            />\n          </FormFieldLabel>\n          {location === \"Venue\" ? (\n            <FormFieldLabel margin=\"small\">\n              <Search />\n            </FormFieldLabel>\n          ) : null}\n        </Box>\n      </Collapsible>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Calendar,\n  Box,\n  RadioButton,\n  Select,\n  Text,\n  Heading,\n  TextInput,\n  Collapsible,\n  Button,\n} from \"grommet\";\nimport { FormFieldLabel } from \"../components/\";\nimport { TimeInput } from \"../components/\";\nimport { Calendar as CalendarIcon } from \"grommet-icons\";\nexport default function Schedule({\n  form,\n  setForm,\n  apikey,\n  screenSize,\n  ...props\n}) {\n  const [open, setOpen] = useState(false);\n  let today = new Date();\n  let year = today.getFullYear();\n  let day = today.getDate();\n  let month = today.getMonth();\n  let bounds = [\n    today.toISOString(),\n    new Date(year + 5, month, day).toISOString(),\n  ];\n\n  const handleDate = (dates) => {\n    if (dates[0].length === 2) {\n      setForm({\n        ...form,\n        start: {\n          ...form.start,\n          date: dates[0][0],\n        },\n        end: {\n          ...form.end,\n          date: dates[0][1],\n        },\n      });\n    }\n  };\n  const handleTime = (e, time) => {\n    if (time === \"start\") {\n      setForm({\n        ...form,\n        start: {\n          ...form.start,\n          time: e.target.value,\n        },\n      });\n    }\n    if (time === \"end\") {\n      setForm({\n        ...form,\n        end: {\n          ...form.end,\n          time: e.target.value,\n        },\n      });\n    }\n  };\n  return (\n    <Box pad=\"medium\" width=\"100vw\" fill>\n      <Button plain onClick={() => setOpen(!open)}>\n        <Heading\n          color={\n            open\n              ? \"neutral-2\"\n              : {\n                  dark: \"light-1\",\n                  light: \"dark-1\",\n                }\n          }\n          level=\"2\"\n        >\n          {open ? \"-\" : \"+\"}{\" \"}\n          <CalendarIcon\n            size=\"medium\"\n            color={\n              open\n                ? \"neutral-2\"\n                : {\n                    dark: \"light-1\",\n                    light: \"dark-1\",\n                  }\n            }\n          />{\" \"}\n          Schedule\n        </Heading>\n      </Button>\n      <Collapsible open={open}>\n        <FormFieldLabel\n          pad={true}\n          help={\n            <Box\n              pad=\"medium\"\n              margin=\"small\"\n              background={{ light: \"light-4\", dark: \"dark-4\" }}\n            >\n              <RadioButton\n                name=\"single\"\n                label={\n                  <Box margin=\"xxsmall\">\n                    <Text size=\"small\">\n                      <Text size=\"small\" weight=\"bold\">\n                        Single occurrence\n                      </Text>{\" \"}\n                      - happens once and can last multiple days\n                    </Text>\n                  </Box>\n                }\n                checked={!form.series}\n                onChange={(event) => setForm({ ...form, series: false })}\n                {...props}\n              />\n              <RadioButton\n                label={\n                  <Box margin=\"xxsmall\">\n                    <Text size=\"small\">\n                      <Text size=\"small\" weight=\"bold\">\n                        Recurring events\n                      </Text>{\" \"}\n                      - repeats or occurs more than once\n                    </Text>\n                  </Box>\n                }\n                name=\"series\"\n                checked={form.series}\n                onChange={(event) => setForm({ ...form, series: true })}\n                {...props}\n              />{\" \"}\n            </Box>\n          }\n        >\n          {!form.series ? (\n            <Box\n              justify=\"around\"\n              margin=\"small\"\n              direction={screenSize === \"small\" ? \"column\" : \"row\"}\n            >\n              <Calendar\n                bounds={bounds}\n                size=\"medium\"\n                onSelect={handleDate}\n                range\n              />\n              <Box pad=\"small\" justify=\"center\">\n                <TimeInput\n                  label=\"Start Time:\"\n                  value={form.start.time}\n                  onChange={(e) => handleTime(e, \"start\")}\n                  required\n                />\n                <TimeInput\n                  label=\"End Time:\"\n                  value={form.end.time}\n                  onChange={(e) => handleTime(e, \"end\")}\n                  required\n                />\n              </Box>\n            </Box>\n          ) : (\n            <Box\n              justify=\"center\"\n              margin=\"small\"\n              direction={screenSize === \"small\" ? \"column\" : \"row\"}\n            >\n              <Calendar bounds={bounds} size=\"medium\" range />\n              <Box pad=\"small\" justify=\"center\">\n                <TimeInput\n                  label=\"Start Time:\"\n                  value={form.start.time}\n                  onChange={(e) => handleTime(e, \"start\")}\n                  required\n                />\n                <TimeInput\n                  label=\"End Time:\"\n                  value={form.end.time}\n                  onChange={(e) => handleTime(e, \"end\")}\n                  required\n                />\n                <FormFieldLabel label=\"Occurs:\">\n                  <Select\n                    value={form.recurrence.occurs}\n                    options={[\"Daily\", \"Weekly\", \"Monthly\"]}\n                    onChange={({ option }) =>\n                      setForm({\n                        ...form,\n                        recurrence: {\n                          ...form.recurrence,\n                          occurs: option,\n                        },\n                      })\n                    }\n                  />\n                </FormFieldLabel>\n                <FormFieldLabel\n                  info={\n                    `Event repeats ` +\n                    form.recurrence.times +\n                    (form.recurrence.times > 1 ? \" times.\" : \" time.\")\n                  }\n                >\n                  <TextInput\n                    value={form.recurrence.times}\n                    onChange={(e) =>\n                      setForm({\n                        ...form,\n                        recurrence: {\n                          ...form.recurrence,\n                          times: e.target.value,\n                        },\n                      })\n                    }\n                  />\n                </FormFieldLabel>\n              </Box>\n            </Box>\n          )}\n        </FormFieldLabel>\n      </Collapsible>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { Box, TextArea, Heading, Text, Button, Collapsible } from \"grommet\";\nimport { Book } from \"grommet-icons\";\nimport { FormFieldLabel } from \"../components/FormFieldLabel\";\n\nclass Description extends React.Component {\n  state = {\n    editor: \"\",\n    open: false,\n  };\n\n  render() {\n    const { form, setForm } = this.props;\n    const handleEditorChange = (e) => {\n      setForm({ ...form, description: e.target.getContent() });\n    };\n    return (\n      <Box pad=\"medium\" width=\"100vw\">\n        <Button\n          plain\n          onClick={() =>\n            this.setState({ ...this.state, open: !this.state.open })\n          }\n        >\n          <Heading\n            color={\n              this.state.open\n                ? \"neutral-2\"\n                : {\n                    dark: \"light-1\",\n                    light: \"dark-1\",\n                  }\n            }\n            level=\"2\"\n          >\n            {this.state.open ? \"-\" : \"+\"}{\" \"}\n            <Book\n              color={\n                this.state.open\n                  ? \"neutral-2\"\n                  : {\n                      dark: \"light-1\",\n                      light: \"dark-1\",\n                    }\n              }\n              size=\"medium\"\n            />{\" \"}\n            Event Description\n          </Heading>\n        </Button>\n        <Collapsible open={this.state.open}>\n          <Box margin=\"small\">\n            <FormFieldLabel\n              info={\n                <Box align=\"end\">\n                  <Text size=\"small\">{form.summary.length} / 140</Text>\n                </Box>\n              }\n              label=\"Summary\"\n            >\n              <TextArea\n                onChange={(e) => setForm({ ...form, summary: e.target.value })}\n                placeholder=\"Write a short event summary to get attendees excited\"\n                resize={false}\n              />\n            </FormFieldLabel>\n          </Box>\n          <Box margin=\"small\">\n            <Editor\n              apiKey=\"l4239s08cwmf7d2qxig6hsvhyihcglbothx4eb7vkgtlxkic\"\n              initialValue={form.description}\n              init={{\n                height: 400,\n                resize: false,\n                menubar: false,\n                plugins: [\n                  \"advlist autolink lists link image imagetools\",\n                  \"charmap print preview anchor help\",\n                  \"searchreplace visualblocks code\",\n                  \"insertdatetime media table paste wordcount\",\n                ],\n                toolbar:\n                  \"undo redo | formatselect | bold italic | bullist numlist | image\",\n              }}\n              onChange={handleEditorChange}\n              onBlur={handleEditorChange}\n            />\n          </Box>\n        </Collapsible>\n      </Box>\n    );\n  }\n}\n\nexport default Description;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  Text,\n  TextInput,\n  Button,\n  DataTable,\n  MaskedInput,\n  Collapsible,\n} from \"grommet\";\nimport { Ticket, FormTrash, Currency } from \"grommet-icons\";\nimport { FormFieldLabel } from \"../components/FormFieldLabel\";\n\nconst Tickets = ({ form, setForm, screenSize }) => {\n  const [selected, setSelected] = useState(\"paid\");\n  const [open, setOpen] = useState(false);\n  const [ticket, setTicket] = useState({\n    name: \"General Admission\",\n    quantity: 100,\n    price: \"$0.00\",\n    num: 0,\n  });\n\n  const handleClick = (e) => {\n    setTicket({ ...ticket, num: ticket.num + 1 });\n    setForm({ ...form, tickets: [...form.tickets, ticket] });\n  };\n  return (\n    <Box pad=\"medium\" width=\"100vw\">\n      <Button plain onClick={() => setOpen(!open)}>\n        <Heading\n          color={\n            open\n              ? \"neutral-2\"\n              : {\n                  dark: \"light-1\",\n                  light: \"dark-1\",\n                }\n          }\n          level=\"2\"\n        >\n          {open ? \"-\" : \"+\"}{\" \"}\n          <Ticket\n            color={\n              open\n                ? \"neutral-2\"\n                : {\n                    dark: \"light-1\",\n                    light: \"dark-1\",\n                  }\n            }\n            size=\"medium\"\n          />{\" \"}\n          Tickets\n        </Heading>\n      </Button>\n      <Collapsible open={open}>\n        <Box\n          gap=\"medium\"\n          justify=\"center\"\n          direction={screenSize === \"small\" ? \"column\" : \"row\"}\n        >\n          <Box pad=\"small\" width={screenSize === \"small\" ? \"100%\" : \"50%\"}>\n            <Box gap=\"medium\" justify=\"center\" pad=\"small\" direction=\"row\">\n              <Box\n                focusIndicator={false}\n                as=\"button\"\n                pad=\"medium\"\n                border={\n                  selected === \"paid\"\n                    ? { size: \"small\", color: \"brand\" }\n                    : { size: \"small\" }\n                }\n                background={{ light: \"light-2\", dark: \"dark-1\" }}\n                style={\n                  selected === \"paid\"\n                    ? {\n                        userSelect: \"none\",\n                        background: \"rgba(240, 85, 55, 0.2)\",\n                      }\n                    : { userSelect: \"none\" }\n                }\n                onClick={() => setSelected(\"paid\")}\n              >\n                <Text>Paid</Text>\n              </Box>\n              <Box\n                focusIndicator={false}\n                as=\"button\"\n                border={\n                  selected === \"free\"\n                    ? { size: \"small\", color: \"brand\" }\n                    : { size: \"small\" }\n                }\n                onClick={() => {\n                  setTicket({ ...ticket, price: \"$0.00\" });\n                  setSelected(\"free\");\n                }}\n                background={{ light: \"light-2\", dark: \"dark-1\" }}\n                style={\n                  selected === \"free\"\n                    ? {\n                        userSelect: \"none\",\n                        background: \"rgba(240, 85, 55, 0.2)\",\n                      }\n                    : { userSelect: \"none\" }\n                }\n                pad=\"medium\"\n              >\n                <Text>Free</Text>\n              </Box>\n            </Box>\n            <FormFieldLabel label=\"Name\" required>\n              <TextInput\n                value={ticket.name === \"General Admission\" ? \"\" : ticket.name}\n                placeholder={ticket.name}\n                onChange={(e) =>\n                  setTicket({\n                    ...ticket,\n                    name: e.target.value,\n                  })\n                }\n              />\n            </FormFieldLabel>\n            <FormFieldLabel label=\"Quantity\" required>\n              <MaskedInput\n                value={ticket.quantity}\n                mask={[\n                  {\n                    length: [1, 6],\n                    regexp: /^([0-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]+\\.[0-9]*[1-9][0-9]*)$/,\n                  },\n                ]}\n                onChange={(e) =>\n                  setTicket({\n                    ...ticket,\n                    quantity: e.target.value,\n                  })\n                }\n              />\n            </FormFieldLabel>\n            <FormFieldLabel\n              label=\"Price\"\n              required={selected === \"paid\"}\n              disabled={selected === \"free\"}\n              style={{ position: \"relative\" }}\n            >\n              <MaskedInput\n                icon={<Currency />}\n                onBlur={() => {\n                  if (ticket.price.split(\".\").length < 2) {\n                    setTicket({ ...ticket, price: ticket.price + \".00\" });\n                  }\n                }}\n                mask={[\n                  { fixed: \"$\" },\n                  {\n                    length: [1, 5],\n                    regexp: /^\\d{1,5}$/,\n                  },\n                  { fixed: \".\" },\n                  {\n                    length: [2],\n                    regexp: /^[0-9]/,\n                    placeholder: \"00\",\n                  },\n                ]}\n                placeholder={ticket.price === \"$0.00\" ? \"Free\" : null}\n                value={ticket.price === \"$0.00\" ? \"\" : ticket.price}\n                disabled={selected === \"free\"}\n                onChange={(e) =>\n                  setTicket({ ...ticket, price: e.target.value })\n                }\n              />\n            </FormFieldLabel>\n            <Box alignSelf=\"center\" width=\"30%\">\n              <Button\n                primary\n                onClick={handleClick}\n                size=\"medium\"\n                label=\"Create Ticket\"\n              />\n            </Box>\n          </Box>\n          <Box pad=\"small\" width={screenSize === \"small\" ? \"100%\" : \"50%\"}>\n            {form.tickets.length > 0 ? (\n              <Box width=\"100%\" align=\"center\">\n                <DataTable\n                  primaryKey=\"num\"\n                  columns={[\n                    {\n                      property: \"name\",\n                      header: <Text>Name</Text>,\n                    },\n                    { property: \"quantity\", header: <Text>Qty</Text> },\n                    {\n                      property: \"price\",\n                      header: <Text>Price</Text>,\n                      render: (datum) => {\n                        if (datum.price === \"$0.00\") {\n                          return \"Free\";\n                        } else {\n                          return datum.price;\n                        }\n                      },\n                    },\n                    {\n                      property: \"num\",\n                      render: (datum) => {\n                        return (\n                          <Box round=\"full\" overflow=\"hidden\">\n                            <Button\n                              size=\"small\"\n                              hoverIndicator=\"accent-1\"\n                              onClick={() => {\n                                setForm({\n                                  ...form,\n                                  tickets: form.tickets.filter(\n                                    (ticket) => ticket.num !== datum.num\n                                  ),\n                                });\n                              }}\n                              icon={<FormTrash />}\n                            />\n                          </Box>\n                        );\n                      },\n                    },\n                  ]}\n                  data={form.tickets}\n                />\n              </Box>\n            ) : (\n              <Box height=\"100%\" align=\"center\" justify=\"center\">\n                <Text>Add Ticket</Text>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Collapsible>\n    </Box>\n  );\n};\n\nexport default Tickets;\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { Box, Heading, Paragraph } from \"grommet\";\nimport AccountManager from \"./AccountManager\";\nimport BasicInfo from \"./BasicInfo\";\nimport Schedule from \"./Schedule\";\nimport Description from \"./Description\";\nimport Tickets from \"./Tickets\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Mutations from \"../graphql/mutations\";\nimport Queries from \"../graphql/queries\";\n\nconst { SUBMIT_FORM } = Mutations;\nconst { FETCH_USER } = Queries;\nlet defaultFormState = {\n  active_tab: \"Basic Info\",\n  title: \"\",\n  location: \"Venue\",\n  category: \"Category\",\n  subcategory: \"subcategory\",\n  type: \"Type\",\n  summary: \"\",\n  description: \"\",\n  start: {\n    date: new Date().toISOString(),\n    time: \"\",\n  },\n  end: {\n    date: new Date().toISOString(),\n    time: \"\",\n  },\n  series: false,\n  recurrence: {\n    times: 1,\n    occurs: \"Daily\",\n  },\n  tickets: [],\n};\n\nlet MainBox = styled(Box)`\n  @keyframes fadeIn {\n    0% {\n      transition: ease-in;\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes fadeOut {\n    0% {\n      opacity: 1;\n      transition: ease-out;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n`;\n\nfunction EventForm({ user, responsive, history, pending, defaultKey }) {\n  const [form, setForm] = useState(defaultFormState);\n  const [selectedKey, setSelectedKey] = useState(defaultKey);\n  const [submitForm] = useMutation(SUBMIT_FORM, {\n    onError: (err) => {\n      console.log(err);\n    },\n    update(client, { data: { scheduleEvent } }) {\n      let updateUser = client.writeQuery({\n        query: FETCH_USER,\n        variables: { userId: user.id },\n        data: {\n          user: {\n            ...scheduleEvent,\n          },\n        },\n        fetchPolicy: \"no-cache\",\n      });\n    },\n  });\n  let date = moment(new Date()).add(\"10\", \"seconds\").toISOString();\n  const [render, setRender] = useState(true);\n  useEffect(() => {\n    if (!pending) setRender(true);\n  }, [pending]);\n\n  const onAnimationEnd = () => {\n    if (pending) setRender(false);\n  };\n  return (\n    render && (\n      <MainBox\n        onAnimationEnd={onAnimationEnd}\n        style={{ animation: `${pending ? \"fadeOut\" : \"fadeIn\"} 1s` }}\n        value={form}\n        pad=\"medium\"\n      >\n        <AccountManager\n          user={user}\n          selectedKey={selectedKey}\n          setSelectedKey={setSelectedKey}\n          history={history}\n        />\n        {user.apikeys && user.apikeys.length > 0 ? (\n          <>\n            <BasicInfo form={form} setForm={setForm} apikey={selectedKey} />\n            <Schedule\n              screenSize={responsive}\n              form={form}\n              setForm={setForm}\n              apikey={selectedKey}\n            />\n            <Description form={form} setForm={setForm} apikey={selectedKey} />\n            <Tickets screenSize={responsive} form={form} setForm={setForm} />\n          </>\n        ) : (\n          <Box width={{ min: \"100%\" }} pad=\"large\" justify=\"center\">\n            <Heading textAlign=\"center\" margin=\"small\" level=\"1\">\n              Welcome to Event Tool\n            </Heading>\n            <Heading fill margin=\"small\" level=\"3\">\n              How to use this application:\n            </Heading>\n            <Paragraph fill margin=\"small\">\n              In order to use this application you need to add the secret keys\n              from the accounts you want to use.\n            </Paragraph>\n          </Box>\n        )}\n      </MainBox>\n    )\n  );\n}\n\nexport default EventForm;\n","import React from \"react\";\nimport Schedule from \"../Schedule\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport EventForm from \"./EventForm\";\nimport Queries from \"../graphql/queries\";\nimport { Box } from \"grommet\";\nimport { Spinner } from \"../components\";\n\nconst { FETCH_USER_ID, FETCH_USER } = Queries;\nfunction EventTool({ responsive, pending }) {\n  const {\n    data: { userId },\n    error: idError,\n    loading: idLoading,\n  } = useQuery(FETCH_USER_ID);\n\n  const { data: userData, error: userError, loading: userLoading } = useQuery(\n    FETCH_USER,\n    {\n      variables: {\n        userId: userId,\n      },\n      fetchPolicy: \"no-cache\",\n    }\n  );\n  if (idError || userError) return <h3>Error: {idError || userError}</h3>;\n  if (idLoading || userLoading)\n    return (\n      <Box height=\"100vh\" justify=\"center\" align=\"center\">\n        <Spinner />\n      </Box>\n    );\n  let { user } = userData;\n  let defaultKey = user.apikeys[0];\n  return (\n    <Box direction=\"row\" justify=\"start\" align=\"start\" height=\"100vh\">\n      <Box>\n        <Schedule user={user} pending={pending} />\n        <EventForm\n          pending={pending}\n          responsive={responsive}\n          user={user}\n          defaultKey={defaultKey}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default EventTool;\n","import React, { useState } from \"react\";\nimport AuthRoute from \"./util/route_util\";\nimport { Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport HeaderPanel from \"./header/Header\";\nimport EventTool from \"./eventtool/EventTool\";\nimport { grommet, Grommet, Box, ResponsiveContext } from \"grommet\";\nimport { deepMerge } from \"grommet/utils\";\n\nconst theme = deepMerge(grommet, {\n  defaultMode: \"dark\",\n  global: {\n    font: {\n      family: \"Noto Sans\",\n    },\n    colors: {\n      brand: \"#f05537\",\n      \"accent-1\": \"#73a580\",\n      \"accent-2\": \"#F48668\",\n      \"accent-3\": \"#c5c392\",\n      \"neutral-1\": \"#EEA960\",\n      \"neutral-2\": \"#3659e3\",\n      \"neutral-3\": \"#47AE6A\",\n      inactive: \"#6f7287\",\n      focus: \"none\",\n    },\n  },\n});\n\nfunction App(props) {\n  const [pending, setPending] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  window.setDarkMode = setDarkMode;\n  return (\n    <Grommet theme={theme} themeMode={darkMode ? \"dark\" : \"light\"}>\n      <ResponsiveContext.Consumer>\n        {(responsive) => {\n          return (\n            <Box\n              height={{ max: \"100vh\" }}\n              style={{ transition: \"0.25s ease-out\" }}\n              background={{ light: \"light-3\", dark: \"dark-1\" }}\n              overflow=\"auto\"\n            >\n              <HeaderPanel\n                responsive={responsive}\n                pending={pending}\n                setPending={setPending}\n              />\n              <Box\n                tag=\"main\"\n                direction=\"column\"\n                align=\"center\"\n                justify=\"start\"\n                {...props}\n              >\n                <Switch>\n                  <AuthRoute\n                    exact\n                    responsive={responsive}\n                    path=\"/login\"\n                    component={Login}\n                    routeType=\"auth\"\n                  />\n                  <AuthRoute\n                    exact\n                    path=\"/\"\n                    responsive={responsive}\n                    component={EventTool}\n                    pending={pending}\n                    routeType=\"protected\"\n                  />\n                  <Redirect to=\"/\" />\n                </Switch>\n              </Box>\n            </Box>\n          );\n        }}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport WebFont from \"webfontloader\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { persistCache } from \"apollo-cache-persist\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink } from \"apollo-link\";\n\nimport Mutations from \"./graphql/mutations\";\nconst { VERIFY_USER } = Mutations;\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: (object) => object._id || null,\n});\n\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message }) => console.log(message));\n  }\n});\nlet devhost = window.location.hostname;\nconst gqlUri =\n  process.env.NODE_ENV === \"production\"\n    ? \"/graphql\"\n    : `http://${devhost}:5000/graphql`;\n\nconst httpLink = createHttpLink({\n  uri: gqlUri,\n  headers: {\n    authorization: localStorage.getItem(\"auth-token\"),\n  },\n});\nconst init = async () => {\n  await persistCache({\n    cache,\n    storage: window.localStorage,\n  });\n  const client = new ApolloClient({\n    link: ApolloLink.from([errorLink, httpLink]),\n    cache,\n    onError: ({ networkError, graphQLErrors }) => {\n      console.log(\"graphQLErrors\", graphQLErrors);\n      console.log(\"networkError\", networkError);\n    },\n    resolvers: {},\n  });\n  const token = localStorage.getItem(\"auth-token\");\n  const userId = localStorage.getItem(\"userId\");\n  cache.writeData({\n    data: {\n      isLoggedIn: Boolean(token),\n      userId: userId,\n    },\n  });\n\n  if (token) {\n    client\n      .mutate({ mutation: VERIFY_USER, variables: { token } })\n      .then(({ data }) => {\n        cache.writeData({\n          data: {\n            isLoggedIn: data.verifyUser.loggedIn,\n            userId: data.verifyUser.id,\n          },\n        });\n      });\n  }\n  const Root = () => (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n  WebFont.load({\n    google: {\n      families: [\"Playball\", \"Fira Sans\", \"Noto Sans\"],\n    },\n  });\n  ReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.register();\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", (e) => {\n  init();\n});\n"],"sourceRoot":""}