{"version":3,"sources":["serviceWorker.js","graphql/queries.js","util/route_util.js","graphql/mutations.js","components/Custom/tabs.js","components/Custom/demoLogin.js","components/Pages/Login.js","components/Layout/Header/Header.js","components/Custom/AccountList.js","components/Layout/Side/SidePanel.js","components/Layout/Side/Pending.js","components/Custom/FormFieldLabel.js","components/Layout/Main/FormComponents/BasicInfo.js","components/Custom/TimeInput.js","components/Layout/Main/FormComponents/Schedule.js","components/Layout/Main/FormComponents/Description.js","components/Layout/Main/FormComponents/Tickets.js","components/Layout/Main/EventForm.js","components/Pages/EventTool.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","IS_LOGGED_IN","gql","FETCH_USER_ID","FETCH_USER","FETCH_ACCOUNTS","FETCH_ACCOUNT","FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES","Queries","AuthRoute","Component","component","path","exact","routeType","rest","query","data","render","props","isLoggedIn","to","LOGIN_USER","REGISTER_USER","VERIFY_USER","PUSH_API_KEY","DELETE_API_KEY","Tab","label","onClick","className","active","activeTab","Box","pad","Text","style","borderBottom","truncate","weight","Tabs","children","defaultTab","screenSize","useState","setActiveTab","onClickTabItem","tab","margin","gap","direction","justify","map","child","key","Demo","email","setEmail","password","setPassword","login","error","inputRef","useRef","useEffect","i","string","int","setInterval","slice","length","current","click","clearInterval","Form","align","onSubmit","e","preventDefault","variables","FormField","info","TextInput","icon","Mail","value","onChange","target","placeholder","type","Button","ref","left","primary","color","height","Mutations","Login","setError","useMutation","onCompleted","token","id","localStorage","setItem","history","push","onError","err","message","split","update","client","writeData","loggedIn","userId","updateCache","register","width","Heading","HeaderPanel","responsive","pending","setPending","mode","setMode","useQuery","eventClient","useApolloClient","logout","removeItem","Header","background","Menu","alignSelf","dropProps","top","items","CheckBox","light","dark","checked","level","userSelect","Tools","size","reverse","Logout","AccountCard","apikey","selectedKey","setSelectedKey","hover","sethover","console","log","deleteAPIkey","readQuery","writeQuery","user","apikeys","deleteAPI","loading","fontWeight","account","focusIndicator","border","as","cursor","name","padding","FormTrash","onMouseEnter","onMouseLeave","Accounts","List","primaryKey","SidePane","errorMessage","setErrorMessage","setApiKey","setTimeout","pushAPIkey","pushApi","max","overflow","bottom","right","Accordion","AccordionPanel","wo","Pending","FormFieldLabel","required","BasicInfo","form","setForm","title","category","subcategory","categories","subcategories","filter","obj","parent","types","orgs","organizations","flex","Document","maxLength","Select","option","options","MapLocation","Search","TimeInput","MaskedInput","mask","regexp","fixed","Schedule","today","Date","year","getFullYear","day","getDate","month","getMonth","bounds","toISOString","handleTime","time","start","end","fill","help","RadioButton","series","event","Calendar","range","recurrence","occurs","times","onSelect","dates","date","Description","state","editor","this","handleEditorChange","description","getContent","Book","summary","TextArea","resize","apiKey","initialValue","init","menubar","plugins","toolbar","onBlur","React","Tickets","selected","setSelected","setHover","quantity","price","num","ticket","setTicket","Ticket","disabled","position","Currency","tickets","DataTable","columns","property","header","datum","Trash","defaultFormState","active_tab","EventForm","index","setIndex","onActive","nextIndex","activeIndex","SidePanel","MainBox","styled","EventTool","idError","idLoading","userError","userLoading","theme","deepMerge","grommet","defaultMode","global","font","family","colors","brand","focus","App","Grommet","themeMode","ResponsiveContext","Consumer","transition","tag","cache","InMemoryCache","dataIdFromObject","object","_id","errorLink","graphQLErrors","httpLink","createHttpLink","uri","headers","authorization","getItem","a","persistCache","storage","ApolloClient","link","ApolloLink","from","networkError","resolvers","mutate","mutation","then","verifyUser","Root","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.99d41d20.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import gql from \"graphql-tag\";\n\nexport default {\n  IS_LOGGED_IN: gql`\n    query IsUserLoggedIn {\n      isLoggedIn @client\n    }\n  `,\n  FETCH_USER_ID: gql`\n    query fetchUserId {\n      userId @client\n    }\n  `,\n  FETCH_USER: gql`\n    query fetchUser($userId: ID!) {\n      user(id: $userId) {\n        id\n        email\n        apikeys\n      }\n    }\n  `,\n  FETCH_ACCOUNTS: gql`\n    query fetchAccounts($apikeys: [String!]) {\n      accounts(apikeys: $apikeys) {\n        id\n        first_name\n        last_name\n        apikey\n        name\n        email\n        is_public\n        image_id\n        organizations {\n          id\n          name\n        }\n      }\n    }\n  `,\n  FETCH_ACCOUNT: gql`\n    query fetchAccount($apikey: String!) {\n      account(apikey: $apikey) {\n        id\n        first_name\n        last_name\n        apikey\n        name\n        email\n        is_public\n        image_id\n        organizations {\n          id\n          name\n        }\n      }\n    }\n  `,\n  FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES: gql`\n    query fetchCategories($apikey: String!) {\n      categories(apikey: $apikey) {\n        name\n        id\n      }\n      subcategories(apikey: $apikey) {\n        name\n        id\n        parent\n      }\n      types(apikey: $apikey) {\n        name\n        id\n      }\n      account(apikey: $apikey) {\n        name\n        organizations {\n          id\n          name\n        }\n      }\n    }\n  `\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport Queries from \"../graphql/queries\";\nconst { IS_LOGGED_IN } = Queries;\n\nconst AuthRoute = ({\n  component: Component,\n  path,\n  exact,\n  routeType,\n  ...rest\n}) => (\n  <Query query={IS_LOGGED_IN}>\n    {({ data }) => {\n      if (routeType === \"auth\") {\n        return (\n          <Route\n            path={path}\n            exact={exact}\n            render={(props) =>\n              !data.isLoggedIn ? (\n                <Component {...props} {...rest} />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          />\n        );\n      } else {\n        return (\n          <Route\n            {...rest}\n            render={(props) =>\n              data.isLoggedIn ? (\n                <Component {...props} {...rest} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n        );\n      }\n    }}\n  </Query>\n);\nexport default AuthRoute;\n","import gql from \"graphql-tag\";\nexport default {\n  LOGIN_USER: gql`\n    mutation LoginUser($email: String!, $password: String!) {\n      login(email: $email, password: $password) {\n        id\n        token\n        loggedIn\n      }\n    }\n  `,\n  REGISTER_USER: gql`\n    mutation RegisterUser($email: String!, $password: String!) {\n      register(email: $email, password: $password) {\n        id\n        token\n        loggedIn\n      }\n    }\n  `,\n  VERIFY_USER: gql`\n    mutation VerifyUser($token: String!) {\n      verifyUser(token: $token) {\n        id\n        loggedIn\n      }\n    }\n  `,\n  PUSH_API_KEY: gql`\n    mutation pushAPIkey($id: ID!, $apikey: String!) {\n      pushAPIkey(id: $id, apikey: $apikey) {\n        id\n        email\n        apikeys\n      }\n    }\n  `,\n  DELETE_API_KEY: gql`\n    mutation deleteAPIkey($id: ID!, $apikey: String!) {\n      deleteAPIkey(id: $id, apikey: $apikey) {\n        id\n        email\n        apikeys\n      }\n    }\n  `,\n};\n","import React, { useState } from \"react\";\nimport { Box, Text } from \"grommet\";\n\nconst Tab = ({ label, onClick, activeTab }) => {\n  let className = \"tab-item\";\n  let active = false;\n  if (activeTab === label) {\n    className += \"active\";\n    active = true;\n  }\n  return (\n    <Box pad=\"xsmall\" className={className} onClick={() => onClick(label)}>\n      <Text\n        style={\n          active\n            ? {\n                borderBottom: \"3px solid #7D4CDB\",\n              }\n            : null\n        }\n        truncate\n        weight={active ? \"bold\" : \"normal\"}\n      >\n        {label}\n      </Text>\n    </Box>\n  );\n};\n\nconst Tabs = ({ children, defaultTab, screenSize }) => {\n  const [activeTab, setActiveTab] = useState(defaultTab);\n  const onClickTabItem = (tab) => {\n    setActiveTab(tab);\n  };\n  if (activeTab === \"Accounts\" && screenSize === \"large\") {\n    setActiveTab(\"Basic Info\");\n  }\n  return (\n    <Box margin=\"xsmall\">\n      <Box gap=\"medium\" direction=\"row\" justify=\"center\">\n        {children.map((child) => {\n          const { label } = child.props;\n          return (\n            <Tab\n              activeTab={activeTab}\n              key={label}\n              label={label}\n              onClick={onClickTabItem}\n            />\n          );\n        })}\n      </Box>\n      <Box>\n        {children.map((child) => {\n          if (child.props.label !== activeTab) return undefined;\n          return child.props.children;\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Tabs;\n","import React, { useEffect, useRef } from \"react\";\nimport { Box, Form, FormField, TextInput, Button } from \"grommet\";\nimport { Mail } from \"grommet-icons\";\nconst Demo = ({ email, setEmail, password, setPassword, login, error }) => {\n  const inputRef = useRef(null);\n  useEffect(() => {\n    let i = 0;\n    let string = \"demo@demo.com123456\";\n    const int = setInterval(() => {\n      if (i <= 13) {\n        setEmail(string.slice(0, i));\n      } else if (i < string.length && i > 13) {\n        setPassword(string.slice(13, i + 1));\n      } else {\n        inputRef.current.click();\n        clearInterval(int);\n      }\n      i++;\n      return () => {\n        clearInterval(int);\n      };\n    }, 200);\n  }, [setEmail, setPassword]);\n\n  return (\n    <Form\n      align=\"end\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        login({\n          variables: {\n            email,\n            password,\n          },\n        });\n      }}\n    >\n      <FormField info=\"Email Address\" align=\"start\">\n        <TextInput\n          icon={<Mail />}\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"example@example.com\"\n        />\n      </FormField>\n      <FormField info=\"Password\" align=\"start\">\n        <TextInput\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </FormField>\n      <Button\n        ref={inputRef}\n        margin={{ left: \"auto\" }}\n        type=\"submit\"\n        primary\n        label=\"Submit\"\n      />\n      <Box style={{ color: \"Red\" }} align=\"center\" height=\"20px\" pad=\"large\">\n        {error}\n      </Box>\n    </Form>\n  );\n};\nexport default Demo;\n","import React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Mutations from \"../../graphql/mutations\";\nimport { Box, Form, FormField, TextInput, Button, Heading } from \"grommet\";\nimport Tabs from \"../Custom/tabs\";\nimport Demo from \"../Custom/demoLogin\";\nimport { Mail } from \"grommet-icons\";\n\nconst { LOGIN_USER, REGISTER_USER } = Mutations;\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [login] = useMutation(LOGIN_USER, {\n    onCompleted: (data) => {\n      const { token, id } = data.login;\n      localStorage.setItem(\"auth-token\", token);\n      localStorage.setItem(\"userId\", id);\n      props.history.push(\"/\");\n    },\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      setError(message);\n    },\n    update: (client, data) => {\n      updateCache(client, data);\n    },\n  });\n\n  const [register] = useMutation(REGISTER_USER, {\n    onCompleted: (data) => {\n      login({ variables: { email, password } });\n    },\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      setError(message + \"hello\");\n    },\n  });\n\n  function updateCache(client, { data }) {\n    client.writeData({\n      data: {\n        isLoggedIn: data.login.loggedIn,\n        userId: data.login.id,\n      },\n    });\n  }\n\n  return (\n    <Box width=\"100%\" height=\"100%\" align=\"center\">\n      <Heading>Event Tool</Heading>\n      <Tabs defaultTab=\"Login\">\n        <Box label=\"Login\" align=\"center\" pad=\"small\">\n          <Form\n            align=\"end\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              login({\n                variables: {\n                  email,\n                  password,\n                },\n              });\n            }}\n          >\n            <FormField info=\"Email Address\" align=\"start\">\n              <TextInput\n                icon={<Mail />}\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"example@example.com\"\n              />\n            </FormField>\n            <FormField info=\"Password\" align=\"start\">\n              <TextInput\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </FormField>\n            <Button\n              margin={{ left: \"auto\" }}\n              type=\"submit\"\n              primary\n              label=\"Submit\"\n            />\n            <Box\n              style={{ color: \"Red\" }}\n              align=\"center\"\n              height=\"20px\"\n              pad=\"large\"\n            >\n              {error}\n            </Box>\n          </Form>\n        </Box>\n        <Box label=\"Register\">\n          <Form\n            align=\"end\"\n            onSubmit={(e) => {\n              e.preventDefault();\n              register({\n                variables: {\n                  email,\n                  password,\n                },\n              });\n            }}\n          >\n            <FormField info=\"Email Address\" align=\"start\">\n              <TextInput\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"example@example.com\"\n              />\n            </FormField>\n            <FormField info=\"Password\" align=\"start\">\n              <TextInput\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </FormField>\n            <Button\n              margin={{ left: \"auto\" }}\n              type=\"submit\"\n              primary\n              label=\"Submit\"\n            />\n            <Box\n              style={{ color: \"Red\" }}\n              align=\"center\"\n              height=\"20px\"\n              pad=\"large\"\n            >\n              {error}\n            </Box>\n          </Form>\n        </Box>\n        <Box label=\"Demo\" align=\"center\" pad=\"small\">\n          <Demo\n            error={error}\n            login={login}\n            password={password}\n            setPassword={setPassword}\n            email={email}\n            setEmail={setEmail}\n          />\n        </Box>\n      </Tabs>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Queries from \"../../../graphql/queries\";\nimport { Box, Heading, Header, CheckBox, Button, Menu, Text } from \"grommet\";\nimport { Logout, Tools, Menu as MenuIcon } from \"grommet-icons\";\nconst { IS_LOGGED_IN } = Queries;\n\nconst HeaderPanel = ({\n  responsive,\n  pending,\n  setPending,\n  mode,\n  setMode,\n  ...props\n}) => {\n  const { data, error } = useQuery(IS_LOGGED_IN);\n  const eventClient = useApolloClient();\n  if (error) return <h3>Error: {error.message}</h3>;\n  const logout = (e) => {\n    e.preventDefault();\n    localStorage.removeItem(\"auth-token\");\n    localStorage.removeItem(\"userId\");\n    eventClient.writeData({\n      data: {\n        isLoggedIn: false,\n        userId: null,\n      },\n    });\n  };\n\n  return responsive === \"small\" ? (\n    <Header background=\"brand\">\n      <Menu\n        alignSelf=\"center\"\n        dropProps={{ align: { top: \"bottom\", left: \"left\" } }}\n        icon={<MenuIcon />}\n        pad=\"small\"\n        items={\n          data.isLoggedIn\n            ? [\n                {\n                  label: (\n                    <CheckBox\n                      background={{\n                        light: \"light-2\",\n                        dark: \"dark-2\",\n                      }}\n                      checked={mode}\n                      label=\"Dark Mode\"\n                    />\n                  ),\n                  onClick: () => setMode(!mode),\n                },\n                {\n                  label: (\n                    <CheckBox\n                      background={{\n                        light: \"light-2\",\n                        dark: \"dark-2\",\n                      }}\n                      checked={pending}\n                      label=\"Show Upcoming\"\n                    />\n                  ),\n                  onClick: () => setPending(!pending),\n                },\n                {\n                  label: \"Logout\",\n                  onClick: (e) => logout(e),\n                },\n              ]\n            : []\n        }\n      />\n    </Header>\n  ) : (\n    <Header background=\"brand\">\n      <Box pad=\"small\" direction=\"row\" align=\"center\">\n        <Heading level=\"1\" style={{ userSelect: \"none\" }}>\n          Event Tool <Tools size=\"2.5rem\" />\n        </Heading>\n      </Box>\n      <Box direction=\"row\" gap=\"small\">\n        <CheckBox\n          label={\n            <Text weight=\"bold\" size=\"small\">\n              Dark Theme\n            </Text>\n          }\n          checked={mode}\n          onChange={() => setMode(!mode)}\n          reverse\n        />\n        {data.isLoggedIn ? (\n          <>\n            <CheckBox\n              label={\n                <Text weight=\"bold\" size=\"small\">\n                  Show Upcoming\n                </Text>\n              }\n              checked={pending}\n              onClick={() => {\n                setPending(!pending);\n              }}\n              reverse\n            />\n            <Box gap=\"small\" margin=\"medium\" direction=\"row\">\n              <Button\n                icon={<Logout size=\"medium\" />}\n                label=\"Logout\"\n                onClick={logout}\n              />\n            </Box>\n          </>\n        ) : null}\n      </Box>\n    </Header>\n  );\n};\n\nexport default HeaderPanel;\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Queries from \"../../graphql/queries\";\nimport Mutations from \"../../graphql/mutations\";\nimport { Box, Text, List } from \"grommet\";\nimport { FormTrash } from \"grommet-icons\";\nconst { DELETE_API_KEY } = Mutations;\nconst { FETCH_ACCOUNT, FETCH_USER } = Queries;\n\nfunction AccountCard({ apikey, id, userId, selectedKey, setSelectedKey }) {\n  const [hover, sethover] = useState(false);\n  const [deleteAPI] = useMutation(DELETE_API_KEY, {\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      console.log(message);\n    },\n    update(client, { data: { deleteAPIkey } }) {\n      let data = client.readQuery({\n        query: FETCH_USER,\n        variables: { userId },\n      });\n      client.writeQuery({\n        query: FETCH_USER,\n        variables: { userId },\n        data: {\n          user: {\n            ...data.user,\n            apikeys: deleteAPIkey.apikeys,\n          },\n        },\n      });\n    },\n  });\n  const { loading, data, error } = useQuery(FETCH_ACCOUNT, {\n    variables: {\n      apikey,\n    },\n  });\n  if (error)\n    return (\n      <h3 style={{ color: \"red\", fontWeight: \"bolder\" }}>\n        {error.message.split(\":\")[1]}\n      </h3>\n    );\n  if (loading) return null;\n  let { account } = data;\n  return (\n    <Box\n      focusIndicator={false}\n      width=\"100vw\"\n      key={id}\n      direction=\"row\"\n      border={\n        apikey === selectedKey\n          ? {\n              color: \"brand\",\n              size: \"small\",\n            }\n          : {\n              size: \"small\",\n            }\n      }\n      background={{ light: \"light-2\", dark: \"dark-1\" }}\n      as=\"button\"\n      style={{ cursor: \"pointer\" }}\n      onClick={() => setSelectedKey(apikey)}\n    >\n      <Box pad=\"xsmall\" direction=\"column\">\n        <Text size=\"xsmall\" truncate>\n          <Text size=\"xsmall\" weight=\"bold\">\n            Account Name:\n          </Text>{\" \"}\n          {account.name}\n        </Text>\n        <Text size=\"xsmall\" truncate>\n          <Text size=\"xsmall\" weight=\"bold\">\n            Email:\n          </Text>{\" \"}\n          {account.email}\n        </Text>\n        <Text size=\"xsmall\" truncate>\n          <Text size=\"xsmall\" weight=\"bold\">\n            API_KEY:\n          </Text>{\" \"}\n          {account.apikey}\n        </Text>\n      </Box>\n      <div style={{ width: \"25px\", padding: \"3px\" }}>\n        <FormTrash\n          onMouseEnter={() => sethover(true)}\n          onMouseLeave={() => sethover(false)}\n          onClick={(e) => {\n            e.preventDefault();\n            deleteAPI({\n              variables: {\n                id: userId,\n                apikey,\n              },\n            });\n          }}\n          color={hover ? \"status-error\" : \"status-disabled\"}\n        />\n      </div>\n    </Box>\n  );\n}\n\nfunction Accounts({ user, selectedKey, setSelectedKey }) {\n  return (\n    <List\n      primaryKey={(apikey, id) => (\n        <AccountCard\n          key={id}\n          apikey={apikey}\n          userId={user.id}\n          id={id}\n          selectedKey={selectedKey}\n          setSelectedKey={setSelectedKey}\n        />\n      )}\n      data={user.apikeys}\n    />\n  );\n}\n\nexport default Accounts;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Queries from \"../../../graphql/queries\";\nimport Mutations from \"../../../graphql/mutations\";\nimport Accounts from \"../../Custom/AccountList\";\nimport {\n  Box,\n  Button,\n  Form,\n  FormField,\n  TextInput,\n  Text,\n  Accordion,\n  AccordionPanel,\n  Heading,\n} from \"grommet\";\n\nconst { FETCH_USER } = Queries;\nconst { PUSH_API_KEY } = Mutations;\n\nfunction SidePane({ user, selectedKey, setSelectedKey }) {\n  const [errorMessage, setErrorMessage] = useState(null);\n  let [apikey, setApiKey] = useState(\"\");\n  const [pushApi] = useMutation(PUSH_API_KEY, {\n    onError: (err) => {\n      const message = err.message.split(\":\")[1];\n      setErrorMessage(<Text size=\"small\">{message}</Text>);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 10000);\n    },\n    update(client, { data: { pushAPIkey } }) {\n      client.writeQuery({\n        query: FETCH_USER,\n        variables: { userId: user.id },\n        data: {\n          user: {\n            ...user,\n            apikeys: pushAPIkey.apikeys,\n          },\n        },\n      });\n    },\n  });\n  return (\n    <Box pad=\"small\" align=\"start\">\n      <Box height={{ max: \"65.6vh\" }} width=\"100%\" overflow=\"auto\">\n        <Box\n          margin={{\n            top: \"small\",\n            bottom: \"small\",\n            left: \"15px\",\n            right: \"15px\",\n          }}\n          pad=\"xsmall\"\n          background=\"brand\"\n        >\n          <Heading level=\"4\">Select Account</Heading>\n        </Box>\n        <Accounts\n          user={user}\n          selectedKey={selectedKey}\n          setSelectedKey={setSelectedKey}\n        />\n        <Accordion alignSelf=\"center\" width=\"100%\">\n          <AccordionPanel\n            height=\"30px\"\n            pad=\"small\"\n            margin={{\n              top: \"small\",\n              bottom: \"small\",\n              left: \"15px\",\n              right: \"15px\",\n            }}\n            background=\"brand\"\n            label=\"Add Account\"\n          >\n            <Box margin=\"medium\" wo>\n              <Form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  pushApi({\n                    variables: {\n                      id: user.id,\n                      apikey,\n                    },\n                  });\n                  setApiKey(\"\");\n                }}\n              >\n                <FormField error={errorMessage} label=\"API Key\" align=\"start\">\n                  <TextInput\n                    onChange={(e) => setApiKey(e.target.value)}\n                    value={apikey}\n                    placeholder=\"2HFXXX2G....\"\n                  />\n                </FormField>\n                <Button\n                  margin={{ left: \"auto\" }}\n                  type=\"submit\"\n                  primary\n                  label=\"Submit\"\n                />\n              </Form>\n            </Box>\n          </AccordionPanel>\n        </Accordion>\n      </Box>\n    </Box>\n  );\n}\n\nexport default SidePane;\n","import React from \"react\";\n\nconst Pending = (props) => {\n  return <div>pending</div>;\n};\n\nexport default Pending;\n","import React from \"react\";\nimport { FormField, Box, Text } from \"grommet\";\n\nexport const FormFieldLabel = props => {\n  const { required, label, ...rest } = props;\n  return (\n    <FormField\n      label={\n        required ? (\n          <Box direction=\"row\">\n            <Text>{label}</Text>\n            <Text color=\"status-critical\">*</Text>\n          </Box>\n        ) : (\n          label\n        )\n      }\n      required={required}\n      {...rest}\n    ></FormField>\n  );\n};\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Queries from \"../../../../graphql/queries\";\nimport { Box, Heading, Select, TextInput, Text } from \"grommet\";\nimport { FormFieldLabel } from \"../../../Custom/FormFieldLabel\";\nimport { Document, MapLocation, Search } from \"grommet-icons\";\n\nconst { FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES } = Queries;\n\nexport default function BasicInfo({ apikey, form, setForm }) {\n  let { title, location, category, subcategory, type } = form;\n  const { loading, data, error } = useQuery(\n    FETCH_CATEGORIES_AND_SUBCATEGORIES_AND_TYPES,\n    {\n      variables: {\n        apikey,\n      },\n    }\n  );\n  if (loading) return <Box width=\"100vw\">...loading</Box>;\n  if (error) {\n    console.log(error);\n    return null;\n  }\n  let categories = data.categories.map(({ name }) => name);\n  let subcategories = data.subcategories\n    .filter((obj) => obj.parent === category)\n    .map(({ name }) => name);\n  let types = data.types.map(({ name }) => name);\n  let orgs = data.account.organizations.map(({ name, id }) => {\n    return name;\n  });\n  return (\n    <Box pad=\"small\" width=\"100vw\" justify=\"between\" flex>\n      <Heading level=\"2\">\n        <Document /> Basic Info\n      </Heading>\n      <Box margin=\"small\">\n        <FormFieldLabel\n          margin=\"small\"\n          required\n          info={\n            <Box align=\"end\">\n              <Text size=\"small\">{title.length} / 70</Text>\n            </Box>\n          }\n          label=\"Event Title\"\n        >\n          <TextInput\n            maxLength=\"70\"\n            margin=\"small\"\n            value={title}\n            onChange={(e) => setForm({ ...form, title: e.target.value })}\n            placeholder=\"Be clear and descriptive\"\n          />\n        </FormFieldLabel>\n        <Box margin=\"small\" gap=\"small\" direction=\"row\">\n          <FormFieldLabel label=\"Type\">\n            <Select\n              placeholder=\"Conference\"\n              value={type}\n              onChange={({ option }) => setForm({ ...form, type: option })}\n              options={types}\n            />\n          </FormFieldLabel>\n          <FormFieldLabel label=\"Category\">\n            <Select\n              placeholder=\"Music\"\n              value={category}\n              onChange={({ option }) => setForm({ ...form, category: option })}\n              options={categories}\n            />\n          </FormFieldLabel>\n          {subcategories.length > 1 ? (\n            <FormFieldLabel label=\"Subcategory\">\n              <Select\n                value={subcategory}\n                onChange={({ option }) =>\n                  setForm({ ...form, subcategory: option })\n                }\n                options={subcategories}\n              />\n            </FormFieldLabel>\n          ) : null}\n        </Box>\n        <FormFieldLabel label=\"Organizer\" margin=\"small\">\n          <Select value={orgs[0]} options={orgs} />\n        </FormFieldLabel>\n      </Box>\n      <Heading level=\"2\">\n        <MapLocation /> Locations\n      </Heading>\n      <Box margin=\"small\">\n        <FormFieldLabel label=\"Venue\" margin=\"small\" required>\n          <Select\n            value={location}\n            onChange={({ option }) => setForm({ ...form, location: option })}\n            options={[\"Venue\", \"Online Event\", \"To Be Announced\"]}\n          />\n        </FormFieldLabel>\n        {location === \"Venue\" ? (\n          <FormFieldLabel margin=\"small\">\n            <TextInput\n              icon={<Search />}\n              placeholder=\"Search for a venue or address.\"\n            />\n          </FormFieldLabel>\n        ) : null}\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { MaskedInput } from \"grommet\";\nimport { FormFieldLabel } from \"./FormFieldLabel\";\n\nexport const TimeInput = (props) => {\n  let { label, required, ...rest } = props;\n  return (\n    <FormFieldLabel label={label} required={required}>\n      <MaskedInput\n        mask={[\n          {\n            length: [1, 2],\n            regexp: /^1[0,1-2]$|^0?[1-9]$|^0$/,\n            placeholder: \"Hour\",\n          },\n          { fixed: \":\" },\n          {\n            length: 2,\n            options: [\"00\", \"15\", \"30\", \"45\"],\n            regexp: /^[0-5][0-9]$|^[0-9]$/,\n            placeholder: \"Min\",\n          },\n          { fixed: \" \" },\n          {\n            length: 2,\n            options: [\"AM\", \"PM\"],\n            regexp: /^[ap]m$|^[AP]M$|^[aApP]$/,\n            placeholder: \"AM/PM\",\n          },\n        ]}\n        {...rest}\n      />\n    </FormFieldLabel>\n  );\n};\n","import React from \"react\";\nimport {\n  Calendar,\n  Box,\n  RadioButton,\n  Select,\n  Text,\n  Heading,\n  TextInput,\n} from \"grommet\";\nimport { FormFieldLabel } from \"../../../Custom/FormFieldLabel\";\nimport { TimeInput } from \"../../../Custom/TimeInput\";\nimport { Calendar as CalendarIcon } from \"grommet-icons\";\nexport default function Schedule({\n  form,\n  setForm,\n  apikey,\n  screenSize,\n  ...props\n}) {\n  let today = new Date();\n  let year = today.getFullYear();\n  let day = today.getDate();\n  let month = today.getMonth();\n  let bounds = [\n    today.toISOString(),\n    new Date(year + 5, month, day).toISOString(),\n  ];\n\n  const handleDate = (dates) => {\n    if (dates[0].length === 2) {\n      setForm({\n        ...form,\n        start: {\n          ...form.start,\n          date: dates[0][0],\n        },\n        end: {\n          ...form.end,\n          date: dates[0][1],\n        },\n      });\n    }\n  };\n  const handleTime = (e, time) => {\n    if (time === \"start\") {\n      setForm({\n        ...form,\n        start: {\n          ...form.start,\n          time: e.target.value,\n        },\n      });\n    }\n    if (time === \"end\") {\n      setForm({\n        ...form,\n        end: {\n          ...form.end,\n          time: e.target.value,\n        },\n      });\n    }\n  };\n  return (\n    <Box pad=\"small\" width=\"100vw\" fill>\n      <Heading level=\"2\">\n        <CalendarIcon /> Schedule\n      </Heading>\n      <FormFieldLabel\n        pad={true}\n        help={\n          <Box\n            pad=\"medium\"\n            margin=\"small\"\n            background={{ light: \"light-4\", dark: \"dark-4\" }}\n          >\n            <RadioButton\n              name=\"single\"\n              label={\n                <Box margin=\"xxsmall\">\n                  <Text size=\"small\">\n                    <Text size=\"small\" weight=\"bold\">\n                      Single occurrence\n                    </Text>{\" \"}\n                    - happens once and can last multiple days\n                  </Text>\n                </Box>\n              }\n              checked={!form.series}\n              onChange={(event) => setForm({ ...form, series: false })}\n              {...props}\n            />\n            <RadioButton\n              label={\n                <Box margin=\"xxsmall\">\n                  <Text size=\"small\">\n                    <Text size=\"small\" weight=\"bold\">\n                      Recurring events\n                    </Text>{\" \"}\n                    - repeats or occurs more than once\n                  </Text>\n                </Box>\n              }\n              name=\"series\"\n              checked={form.series}\n              onChange={(event) => setForm({ ...form, series: true })}\n              {...props}\n            />{\" \"}\n          </Box>\n        }\n      >\n        {!form.series ? (\n          <Box\n            justify=\"around\"\n            margin=\"small\"\n            direction={screenSize === \"small\" ? \"column\" : \"row\"}\n          >\n            <Calendar\n              bounds={bounds}\n              size=\"medium\"\n              onSelect={handleDate}\n              range\n            />\n            <Box pad=\"small\" justify=\"center\">\n              <TimeInput\n                label=\"Start Time:\"\n                value={form.start.time}\n                onChange={(e) => handleTime(e, \"start\")}\n                required\n              />\n              <TimeInput\n                label=\"End Time:\"\n                value={form.end.time}\n                onChange={(e) => handleTime(e, \"end\")}\n                required\n              />\n            </Box>\n          </Box>\n        ) : (\n          <Box\n            justify=\"center\"\n            margin=\"small\"\n            direction={screenSize === \"small\" ? \"column\" : \"row\"}\n          >\n            <Calendar bounds={bounds} size=\"medium\" range />\n            <Box pad=\"small\" justify=\"center\">\n              <TimeInput\n                label=\"Start Time:\"\n                value={form.start.time}\n                onChange={(e) => handleTime(e, \"start\")}\n                required\n              />\n              <TimeInput\n                label=\"End Time:\"\n                value={form.end.time}\n                onChange={(e) => handleTime(e, \"end\")}\n                required\n              />\n              <FormFieldLabel label=\"Occurs:\">\n                <Select\n                  value={form.recurrence.occurs}\n                  options={[\"Daily\", \"Weekly\", \"Monthly\"]}\n                  onChange={({ option }) =>\n                    setForm({\n                      ...form,\n                      recurrence: {\n                        ...form.recurrence,\n                        occurs: option,\n                      },\n                    })\n                  }\n                />\n              </FormFieldLabel>\n              <FormFieldLabel\n                info={\n                  `Event repeats ` +\n                  form.recurrence.times +\n                  (form.recurrence.times > 1 ? \" times.\" : \" time.\")\n                }\n              >\n                <TextInput\n                  value={form.recurrence.times}\n                  onChange={(e) =>\n                    setForm({\n                      ...form,\n                      recurrence: {\n                        ...form.recurrence,\n                        times: e.target.value,\n                      },\n                    })\n                  }\n                />\n              </FormFieldLabel>\n            </Box>\n          </Box>\n        )}\n      </FormFieldLabel>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { Box, TextArea, Heading, Text } from \"grommet\";\nimport { Book } from \"grommet-icons\";\nimport { FormFieldLabel } from \"../../../Custom/FormFieldLabel\";\n\nclass Description extends React.Component {\n  state = {\n    editor: \"\",\n  };\n\n  render() {\n    const { form, setForm } = this.props;\n    const handleEditorChange = (e) => {\n      setForm({ ...form, description: e.target.getContent() });\n    };\n    return (\n      <Box pad=\"small\" width=\"100vw\">\n        <Heading level=\"2\">\n          <Book /> Event Description\n        </Heading>\n        <Box margin=\"small\">\n          <FormFieldLabel\n            info={\n              <Box align=\"end\">\n                <Text size=\"small\">{form.summary.length} / 140</Text>\n              </Box>\n            }\n            label=\"Summary\"\n          >\n            <TextArea\n              onChange={(e) => setForm({ ...form, summary: e.target.value })}\n              placeholder=\"Write a short event summary to get attendees excited\"\n              resize={false}\n            />\n          </FormFieldLabel>\n        </Box>\n        <Box margin=\"small\">\n          <Editor\n            apiKey=\"l4239s08cwmf7d2qxig6hsvhyihcglbothx4eb7vkgtlxkic\"\n            initialValue={form.description}\n            init={{\n              height: 400,\n              resize: false,\n              menubar: false,\n              plugins: [\n                \"advlist autolink lists link image imagetools\",\n                \"charmap print preview anchor help\",\n                \"searchreplace visualblocks code\",\n                \"insertdatetime media table paste wordcount\",\n              ],\n              toolbar:\n                \"undo redo | formatselect | bold italic | bullist numlist | image\",\n            }}\n            onChange={handleEditorChange}\n            onBlur={handleEditorChange}\n          />\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Description;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  Text,\n  TextInput,\n  Button,\n  DataTable,\n  MaskedInput,\n} from \"grommet\";\nimport { Ticket, Trash, Currency } from \"grommet-icons\";\nimport { FormFieldLabel } from \"../../../Custom/FormFieldLabel\";\n\nconst Tickets = ({ form, setForm, screenSize }) => {\n  const [selected, setSelected] = useState(\"paid\");\n  const [hover, setHover] = useState(false);\n  const [ticket, setTicket] = useState({\n    name: \"General Admission\",\n    quantity: 100,\n    price: \"$0.00\",\n    num: 0,\n  });\n\n  const handleClick = (e) => {\n    setTicket({ ...ticket, num: ticket.num + 1 });\n    setForm({ ...form, tickets: [...form.tickets, ticket] });\n  };\n  return (\n    <Box justify=\"center\" pad=\"small\" width=\"100vw\">\n      <Heading level=\"2\" margin=\"medium\">\n        <Ticket /> Tickets\n      </Heading>\n      <Box\n        gap=\"medium\"\n        justify=\"center\"\n        direction={screenSize === \"small\" ? \"column\" : \"row\"}\n      >\n        <Box pad=\"small\" width={screenSize === \"small\" ? \"100%\" : \"50%\"}>\n          <Box gap=\"medium\" justify=\"center\" pad=\"small\" direction=\"row\">\n            <Box\n              focusIndicator={false}\n              as=\"button\"\n              pad=\"medium\"\n              border={\n                selected === \"paid\"\n                  ? { size: \"small\", color: \"brand\" }\n                  : { size: \"small\" }\n              }\n              background={{ light: \"light-2\", dark: \"dark-1\" }}\n              style={\n                selected === \"paid\"\n                  ? {\n                      userSelect: \"none\",\n                      background: \"rgba(0, 96, 168, 0.2)\",\n                    }\n                  : { userSelect: \"none\" }\n              }\n              onClick={() => setSelected(\"paid\")}\n            >\n              <Text>Paid</Text>\n            </Box>\n            <Box\n              focusIndicator={false}\n              as=\"button\"\n              border={\n                selected === \"free\"\n                  ? { size: \"small\", color: \"brand\" }\n                  : { size: \"small\" }\n              }\n              onClick={() => {\n                setTicket({ ...ticket, price: \"$0.00\" });\n                setSelected(\"free\");\n              }}\n              background={{ light: \"light-2\", dark: \"dark-1\" }}\n              style={\n                selected === \"free\"\n                  ? {\n                      userSelect: \"none\",\n                      background: \"rgba(0, 96, 168, 0.2)\",\n                    }\n                  : { userSelect: \"none\" }\n              }\n              pad=\"medium\"\n            >\n              <Text>Free</Text>\n            </Box>\n          </Box>\n          <FormFieldLabel label=\"Name\" required>\n            <TextInput\n              value={ticket.name === \"General Admission\" ? \"\" : ticket.name}\n              placeholder={ticket.name}\n              onChange={(e) =>\n                setTicket({\n                  ...ticket,\n                  name: e.target.value,\n                })\n              }\n            />\n          </FormFieldLabel>\n          <FormFieldLabel label=\"Quantity\" required>\n            <MaskedInput\n              value={ticket.quantity}\n              mask={[\n                {\n                  length: [1, 6],\n                  regexp: /^([0-9]*[1-9][0-9]*(\\.[0-9]+)?|[0]+\\.[0-9]*[1-9][0-9]*)$/,\n                },\n              ]}\n              onChange={(e) =>\n                setTicket({\n                  ...ticket,\n                  quantity: e.target.value,\n                })\n              }\n            />\n          </FormFieldLabel>\n          <FormFieldLabel\n            label=\"Price\"\n            required={selected === \"paid\"}\n            disabled={selected === \"free\"}\n            style={{ position: \"relative\" }}\n          >\n            <MaskedInput\n              icon={<Currency />}\n              onBlur={() => {\n                if (ticket.price.split(\".\").length < 2) {\n                  setTicket({ ...ticket, price: ticket.price + \".00\" });\n                }\n              }}\n              mask={[\n                { fixed: \"$\" },\n                {\n                  length: [1, 5],\n                  regexp: /^\\d{1,5}$/,\n                },\n                { fixed: \".\" },\n                {\n                  length: [2],\n                  regexp: /^[0-9]/,\n                  placeholder: \"00\",\n                },\n              ]}\n              placeholder={ticket.price === \"$0.00\" ? \"Free\" : null}\n              value={ticket.price === \"$0.00\" ? \"\" : ticket.price}\n              disabled={selected === \"free\"}\n              onChange={(e) => setTicket({ ...ticket, price: e.target.value })}\n            />\n          </FormFieldLabel>\n          <Box alignSelf=\"center\" width=\"30%\">\n            <Button\n              primary\n              onClick={handleClick}\n              size=\"medium\"\n              label=\"Create Ticket\"\n            />\n          </Box>\n        </Box>\n        <Box pad=\"small\" width={screenSize === \"small\" ? \"100%\" : \"50%\"}>\n          {form.tickets.length > 0 ? (\n            <Box width=\"100%\" align=\"center\">\n              <DataTable\n                primaryKey=\"num\"\n                columns={[\n                  {\n                    property: \"name\",\n                    header: <Text>Name</Text>,\n                  },\n                  { property: \"quantity\", header: <Text>Qty</Text> },\n                  {\n                    property: \"price\",\n                    header: <Text>Price</Text>,\n                    render: (datum) => {\n                      if (datum.price === \"$0.00\") {\n                        return \"Free\";\n                      } else {\n                        return datum.price;\n                      }\n                    },\n                  },\n                  {\n                    property: \"num\",\n                    render: (datum) => (\n                      <Button\n                        onMouseEnter={() => setHover(true)}\n                        onMouseLeave={() => setHover(false)}\n                        onClick={() => {\n                          setForm({\n                            ...form,\n                            tickets: form.tickets.filter(\n                              (ticket) => ticket.num !== datum.num\n                            ),\n                          });\n                        }}\n                        icon={<Trash color={hover ? \"brand\" : null} />}\n                      />\n                    ),\n                  },\n                ]}\n                data={form.tickets}\n              />\n            </Box>\n          ) : (\n            <Box height=\"100%\" align=\"center\" justify=\"center\">\n              <Text>Add Ticket</Text>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Tickets;\n","import React, { useState } from \"react\";\nimport { Box, Tabs, Tab } from \"grommet\";\nimport SidePanel from \"../../Layout/Side/SidePanel\";\nimport BasicInfo from \"./FormComponents/BasicInfo\";\nimport Schedule from \"./FormComponents/Schedule\";\nimport Description from \"./FormComponents/Description\";\nimport Tickets from \"./FormComponents/Tickets\";\n\nlet defaultFormState = {\n  active_tab: \"Basic Info\",\n  title: \"\",\n  location: \"Venue\",\n  category: \"Category\",\n  subcategory: \"subcategory\",\n  type: \"Type\",\n  summary: \"\",\n  description: \"\",\n  start: {\n    date: new Date().toISOString(),\n    time: \"\",\n  },\n  end: {\n    date: new Date().toISOString(),\n    time: \"\",\n  },\n  series: false,\n  recurrence: {\n    times: 1,\n    occurs: \"Daily\",\n  },\n  tickets: [],\n};\n\nfunction EventForm({ user, selectedKey, setSelectedKey, responsive, history }) {\n  const [form, setForm] = useState(defaultFormState);\n  const [index, setIndex] = useState();\n  const onActive = (nextIndex) => setIndex(nextIndex);\n  console.log(form);\n  if (form.active_tab === \"Accounts\" && responsive === \"large\") {\n    setForm({ ...form, active_tab: \"Basic Info\" });\n  }\n\n  return responsive !== \"large\" ? (\n    <Box value={form}>\n      <Tabs\n        margin=\"small\"\n        activeIndex={index}\n        onActive={onActive}\n        defaultTab=\"Accounts\"\n      >\n        <Tab title=\"Accounts\">\n          <SidePanel\n            user={user}\n            selectedKey={selectedKey}\n            setSelectedKey={setSelectedKey}\n            history={history}\n          />\n        </Tab>\n        <Tab title=\"Basic Info\">\n          <BasicInfo form={form} setForm={setForm} apikey={selectedKey} />\n        </Tab>\n        <Tab title=\"Schedule\">\n          <Schedule\n            screenSize={responsive}\n            form={form}\n            setForm={setForm}\n            apikey={selectedKey}\n          />\n        </Tab>\n        <Tab title=\"Description\">\n          <Description form={form} setForm={setForm} apikey={selectedKey} />\n        </Tab>\n        <Tab title=\"Tickets\">\n          <Tickets screenSize={responsive} form={form} setForm={setForm} />\n        </Tab>\n      </Tabs>\n    </Box>\n  ) : (\n    <Box value={form}>\n      <Tabs\n        activeIndex={index}\n        onActive={onActive}\n        defaultTab=\"Accounts\"\n        screenSize={responsive}\n        margin=\"small\"\n      >\n        <Tab title=\"Basic Info\">\n          <BasicInfo form={form} setForm={setForm} apikey={selectedKey} />\n        </Tab>\n        <Tab title=\"Schedule\">\n          <Schedule\n            screenSize={responsive}\n            form={form}\n            setForm={setForm}\n            apikey={selectedKey}\n          />\n        </Tab>\n        <Tab title=\"Description\">\n          <Description form={form} setForm={setForm} apikey={selectedKey} />\n        </Tab>\n        <Tab title=\"Tickets\">\n          <Tickets screenSize={responsive} form={form} setForm={setForm} />\n        </Tab>\n      </Tabs>\n    </Box>\n  );\n}\n\nexport default EventForm;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport SidePanel from \"../Layout/Side/SidePanel\";\nimport Pending from \"../Layout/Side/Pending\";\nimport EventForm from \"../Layout/Main/EventForm\";\nimport Queries from \"../../graphql/queries\";\nimport styled from \"styled-components\";\nimport { Box } from \"grommet\";\n\nlet MainBox = styled(Box)`\n  .open {\n    opacity: 1;\n    height: 98%;\n    width: 400px;\n    transition: 0.25s ease-out;\n  }\n  .closed {\n    opacity: 0;\n    transition: 0.2s ease-in;\n    width: 0;\n    height: 98%;\n    transform: translateX(-130%);\n  }\n  .here {\n    opacity: 1;\n    transition: opacity 0.5s ease-out;\n  }\n  .gone {\n    pointer-events: none;\n    opacity: 0;\n  }\n`;\n\nconst { FETCH_USER_ID, FETCH_USER } = Queries;\nfunction EventTool({ responsive, pending, ...props }) {\n  const {\n    data: { userId },\n    error: idError,\n    loading: idLoading,\n  } = useQuery(FETCH_USER_ID);\n  const {\n    data: { user },\n    error: userError,\n    loading: userLoading,\n  } = useQuery(FETCH_USER, {\n    variables: {\n      userId: userId,\n    },\n  });\n  const [selectedKey, setSelectedKey] = useState(user.apikeys[0]);\n  if (idError || userError)\n    return <h3>Error: {idError.message || userError.message}</h3>;\n  if (idLoading || userLoading) return <h1>Test Message</h1>;\n  return (\n    <Box direction=\"column\">\n      <MainBox direction=\"row\" justify=\"start\" align=\"start\">\n        <Box className={responsive !== \"large\" ? \"closed\" : \"open\"}>\n          <SidePanel\n            user={user}\n            history={props.history}\n            selectedKey={selectedKey}\n            setSelectedKey={setSelectedKey}\n          />\n        </Box>\n        <Box style={{ position: \"relative\" }} direction=\"row\">\n          <Box className={pending ? \"gone\" : \"here\"}>\n            <EventForm\n              responsive={responsive}\n              user={user}\n              selectedKey={selectedKey}\n              setSelectedKey={setSelectedKey}\n            />\n          </Box>\n          <Box\n            height=\"100%\"\n            width=\"100%\"\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n            className={pending ? \"here\" : \"gone\"}\n          >\n            <Pending />\n          </Box>\n        </Box>\n      </MainBox>\n    </Box>\n  );\n}\n\nexport default EventTool;\n","import React, { useState } from \"react\";\nimport AuthRoute from \"../util/route_util\";\nimport Login from \"./Pages/Login\";\nimport HeaderPanel from \"./Layout/Header/Header\";\nimport EventTool from \"./Pages/EventTool\";\nimport { grommet, Grommet, Box, ResponsiveContext } from \"grommet\";\nimport { deepMerge } from \"grommet/utils\";\n\nconst theme = deepMerge(grommet, {\n  defaultMode: \"light\",\n  global: {\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n    colors: {\n      brand: \"#0060A8\",\n      \"accent-1\": \"#00a89d\",\n      \"accent-2\": \"#a8005f\",\n      \"accent-3\": \"#b0e0dc\",\n      \"accent-4\": \"#dbf500\",\n      focus: \"none\",\n    },\n  },\n});\n\nfunction App(props) {\n  const [pending, setPending] = useState(false);\n  const [mode, setMode] = useState(false);\n  return (\n    <Grommet theme={theme} themeMode={mode ? \"dark\" : \"light\"}>\n      <ResponsiveContext.Consumer>\n        {(responsive) => {\n          return (\n            <Box\n              style={{ transition: \"0.25s ease-out\" }}\n              background={{ light: \"light-1\", dark: \"dark-1\" }}\n              overflow=\"auto\"\n              height=\"100vh\"\n            >\n              <HeaderPanel\n                responsive={responsive}\n                mode={mode}\n                setMode={setMode}\n                pending={pending}\n                setPending={setPending}\n              />\n              <Box\n                tag=\"main\"\n                direction=\"column\"\n                align=\"center\"\n                justify=\"start\"\n                {...props}\n              >\n                <AuthRoute\n                  exact\n                  responsive={responsive}\n                  path=\"/login\"\n                  component={Login}\n                  routeType=\"auth\"\n                />\n                <AuthRoute\n                  exact\n                  path=\"/\"\n                  responsive={responsive}\n                  component={EventTool}\n                  pending={pending}\n                  routeType=\"protected\"\n                />\n              </Box>\n            </Box>\n          );\n        }}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { persistCache } from \"apollo-cache-persist\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink } from \"apollo-link\";\n\nimport Mutations from \"./graphql/mutations\";\nconst { VERIFY_USER } = Mutations;\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: (object) => object._id || null,\n});\n\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message));\n});\nlet devhost = window.location.hostname;\nconst gqlUri =\n  process.env.NODE_ENV === \"production\"\n    ? \"/graphql\"\n    : `http://${devhost}:5000/graphql`;\n\nconst httpLink = createHttpLink({\n  uri: gqlUri,\n  headers: {\n    authorization: localStorage.getItem(\"auth-token\"),\n  },\n});\nconst init = async () => {\n  await persistCache({\n    cache,\n    storage: window.localStorage,\n  });\n  const client = new ApolloClient({\n    link: ApolloLink.from([errorLink, httpLink]),\n    cache,\n    onError: ({ networkError, graphQLErrors }) => {\n      console.log(\"graphQLErrors\", graphQLErrors);\n      console.log(\"networkError\", networkError);\n    },\n    resolvers: {},\n  });\n  const token = localStorage.getItem(\"auth-token\");\n  const userId = localStorage.getItem(\"userId\");\n  cache.writeData({\n    data: {\n      isLoggedIn: Boolean(token),\n      userId: userId,\n    },\n  });\n\n  if (token) {\n    client\n      .mutate({ mutation: VERIFY_USER, variables: { token } })\n      .then(({ data }) => {\n        cache.writeData({\n          data: {\n            isLoggedIn: data.verifyUser.loggedIn,\n            userId: data.verifyUser.id,\n          },\n        });\n      });\n  }\n  const Root = () => (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n\n  ReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n};\ninit();\n"],"sourceRoot":""}